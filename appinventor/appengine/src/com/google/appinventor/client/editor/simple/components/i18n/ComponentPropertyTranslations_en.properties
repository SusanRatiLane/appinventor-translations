AboutScreenProperties=AboutScreen
AboutScreenPropertyDescriptions=Information about the screen. It appears when "About this Application" is selected from the system menu. Use it to inform people about your app. In multiple screen apps, each screen has its own AboutScreen info.
AboveRangeEventEnabledProperties=AboveRangeEventEnabled
AbsoluteStrengthProperties=AbsoluteStrength
AbsoluteStrengthPropertyDescriptions=Indicates the absolute strength of the field.
AccelerometerSensor__AvailablePropertyDescriptions=Returns whether the accelerometer is available on the device.
AccelerometerSensor__EnabledPropertyDescriptions=If true, the sensor will generate events. Otherwise, no events are generated even if the device is accelerated or shaken.
AccelerometerSensor__LegacyModePropertyDescriptions=Prior to the release that added this property the AccelerometerSensor component passed through sensor values directly as received from the Android system. However these values do not compensate for tablets that default to Landscape mode, requiring the MIT App Inventor programmer to compensate. However compensating would result in incorrect results in Portrait mode devices such as phones. We now detect Landscape mode tablets and perform the compensation. However if your project is already compensating for the change, you will now get incorrect results. Although our preferred solution is for you to update your project, you can also just set this property to “true” and our compensation code will be deactivated. Note\: We recommend that you update your project as we may remove this property in a future release.
AccelerometerSensor__MinimumIntervalPropertyDescriptions=The minimum interval, in milliseconds, between phone shakes
AccentColorProperties=AccentColor
AccentColorPropertyDescriptions=This is the accent color used for highlights and other user interface accents.
AccuracyProperties=Accuracy
AccuracyPropertyDescriptions=The most recent measure of accuracy, in meters. If no value is available, 0 will be returned.
ActionBarProperties=ActionBar
ActionBarPropertyDescriptions=Property for ActionBar
ActionProperties=Action
ActivityClassProperties=ActivityClass
ActivityClassPropertyDescriptions=Returns the class part of the specific component that will be started.
ActivityPackageProperties=ActivityPackage
ActivityPackagePropertyDescriptions=Returns the package part of the specific component that will be started.
ActivityStarter__ActionPropertyDescriptions=Returns the action that will be used to start the activity.
ActivityStarter__ResultPropertyDescriptions=Returns the result from the activity.
AddressesAndNamesProperties=AddressesAndNames
AddressesAndNamesPropertyDescriptions=The addresses and names of paired Bluetooth devices
AirPressureProperties=AirPressure
AirPressurePropertyDescriptions=The air pressure in hPa (millibar), if the sensor is available and enabled.
AlignHorizontalProperties=AlignHorizontal
AlignVerticalProperties=AlignVertical
AllowCookiesProperties=AllowCookies
AllowCookiesPropertyDescriptions=Whether the cookies from a response should be saved and used in subsequent requests. Cookies are only supported on Android version 2.3 or greater.
AlternateTextProperties=AlternateText
AlternateTextPropertyDescriptions=A written description of what the image looks like.
AltitudeProperties=Altitude
AltitudePropertyDescriptions=The most recently available altitude value, in meters. If no value is available, 0 will be returned.
AnchorHorizontalProperties=AnchorHorizontal
AnchorHorizontalPropertyDescriptions=The horizontal alignment property controls where the Marker''s anchor is located relative to its width. The choices are\: 1 \= left aligned, 3 \= horizontally centered, 2 \= right aligned.
AnchorVerticalProperties=AnchorVertical
AnchorVerticalPropertyDescriptions=The vertical alignment property controls where the Marker''s anchor is located relative to its height. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom.
AngleProperties=Angle
AnglePropertyDescriptions=Returns an angle that tells the direction in which the device is tiled. That is, it tells the direction of the force that would be felt by a ball rolling on the surface of the device.
AnimationProperties=Animation
AnimationPropertyDescriptions=This is a limited form of animation that can attach a small number of motion types to images. The allowable motions are ScrollRightSlow, ScrollRight, ScrollRightFast, ScrollLeftSlow, ScrollLeft, ScrollLeftFast, and Stop
ApiKeyProperties=ApiKey
AppNameProperties=AppName
AppNamePropertyDescriptions=This is the display name of the installed application in the phone.If the AppName is blank, it will be set to the name of the project when the project is built.
ApplicationNameProperties=ApplicationName
ApplicationNamePropertyDescriptions=Specifies the name of the application given when doing an API call.
AvailableCountriesProperties=AvailableCountries
AvailableCountriesPropertyDescriptions=List of the country codes available on this device for use with TextToSpeech. Check the Android developer documentation under supported languages to find the meanings of these abbreviations.
AvailableLanguagesProperties=AvailableLanguages
AvailableLanguagesPropertyDescriptions=List of the languages available on this device for use with TextToSpeech. Check the Android developer documentation under supported languages to find the meanings of these abbreviations.
AvailableProperties=Available
AvailableProvidersProperties=AvailableProviders
AvailableProvidersPropertyDescriptions=List of available service providers, such as gps or network. This information is provided as a list and in text form.
AverageLuxProperties=AverageLux
AverageLuxPropertyDescriptions=The average of the 10 most recent light levels measured, in lux.
AzimuthProperties=Azimuth
AzimuthPropertyDescriptions=Returns the azimuth angle of the device. To return meaningful values the sensor must be enabled.
BackgroundColorProperties=BackgroundColor
BackgroundImageProperties=BackgroundImage
BackgroundImageinBase64Properties=BackgroundImageinBase64
BackgroundImageinBase64PropertyDescriptions=Set the background image in Base64 format. This requires API level >\= 8. For devices with API level less than 8, setting this will end up with an empty background.
Ball__EnabledPropertyDescriptions=Controls whether the Ball moves and can be interacted with through collisions, dragging, touching, and flinging.
Ball__HeadingPropertyDescriptions=Returns the Ball''s heading in degrees above the positive x-axis. Zero degrees is toward the right of the screen; 90 degrees is toward the top of the screen.
Ball__IntervalPropertyDescriptions=The interval in milliseconds at which the Ball''s position is updated. For example, if the interval is 50 and the speed is 10, then every 50 milliseconds the sprite will move 10 pixels in the heading direction.
Ball__PaintColorPropertyDescriptions=The color of the Ball.
Ball__RadiusPropertyDescriptions=The distance from the edge of the Ball to its center.
Ball__SpeedPropertyDescriptions=The number of pixels that the Ball should move every interval, if enabled.
Ball__VisiblePropertyDescriptions=Whether the Ball is visible.
Ball__XPropertyDescriptions=The horizontal coordinate of the Ball, increasing as the Ball moves right. If the property OriginAtCenter is true, the coordinate is for the center of the Ball; otherwise, it is for the leftmost point of the Ball.
Ball__YPropertyDescriptions=The vertical coordinate of the Ball, increasing as the Ball moves down. If the property OriginAtCenter is true, the coordinate is for the center of the Ball; otherwise, it is for the uppermost point of the Ball.
Ball__ZPropertyDescriptions=How the `Ball` should be layered relative to other
BallotOptionsProperties=BallotOptions
BallotOptionsPropertyDescriptions=The list of ballot options.
BallotQuestionProperties=BallotQuestion
BallotQuestionPropertyDescriptions=The question to be voted on.
BarcodeScanner__ResultPropertyDescriptions=Text result of the previous scan.
Barometer__AvailablePropertyDescriptions=Specifies whether or not the device has the hardware to support the Barometer component.
Barometer__EnabledPropertyDescriptions=If enabled, then device will listen for changes.
BaudRateProperties=BaudRate
BaudRatePropertyDescriptions=Returns the current baud rate
BelowRangeEventEnabledProperties=BelowRangeEventEnabled
BigDefaultTextProperties=BigDefaultText
BigDefaultTextPropertyDescriptions=When checked, we will use high contrast mode
BlocksToolkitProperties=BlocksToolkit
BlocksToolkitPropertyDescriptions=Choose the set of components you’ll need for your project. A smaller set is good for beginner projects, while experts can use all options to build complex apps. For example, the Beginner Toolkit gives you access to all the features you need for our novice tutorials and curriculum.</p><p>You can always change your toolkit in Project Properties, so your choice now won’t limit the future possibilities for your app.</p>
BluetoothClientProperties=BluetoothClient
BluetoothClientPropertyDescriptions=The BluetoothClient component that should be used for communication.
BluetoothClient__AvailablePropertyDescriptions=Whether Bluetooth is available on the device
BluetoothClient__EnabledPropertyDescriptions=Whether Bluetooth is enabled
BluetoothServer__AvailablePropertyDescriptions=Whether Bluetooth is available on the device
BluetoothServer__EnabledPropertyDescriptions=Whether Bluetooth is enabled
BottomOfRangeProperties=BottomOfRange
BottomOfRangePropertyDescriptions=The bottom of the range used for the BelowRange, WithinRange, and AboveRange events.
BoundingBoxProperties=BoundingBox
BoundingBoxPropertyDescriptions=Bounding box for the map stored as [[North, West], [South, East]].
BufferSizeProperties=BufferSize
BufferSizePropertyDescriptions=Returns the buffer size in bytes
Button__BackgroundColorPropertyDescriptions=Returns the button''s background color
Button__EnabledPropertyDescriptions=If set, user can tap Button to cause action.
Button__FontBoldPropertyDescriptions=If set, Button text is displayed in bold.
Button__FontItalicPropertyDescriptions=If set, Button text is displayed in italics.
Button__FontSizePropertyDescriptions=Point size for Button text.
Button__FontTypefacePropertyDescriptions=Font family for Button text.
Button__HeightPercentPropertyDescriptions=Specifies the vertical height of the Button as a percentage of the height of the Screen.
Button__HeightPropertyDescriptions=Specifies the vertical height of the Button, measured in pixels.
Button__ImagePropertyDescriptions=Image to display on button.
Button__ShapePropertyDescriptions=Returns the style of the `Button`.
Button__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a Button that has an image as background.
Button__TextAlignmentPropertyDescriptions=Left, center, or right.
Button__TextColorPropertyDescriptions=Color for button text.
Button__TextPropertyDescriptions=Text to display on Button.
Button__VisiblePropertyDescriptions=Specifies whether the Button should be visible on the screen. Value is true if the Button is showing and false if hidden.
Button__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Button as a percentage of the width of the Screen.
Button__WidthPropertyDescriptions=Specifies the horizontal width of the Button, measured in pixels.
CalibrateStrideLengthProperties=CalibrateStrideLength
CalibrateStrideLengthPropertyDescriptions=This property has been deprecated.
Canvas__BackgroundColorPropertyDescriptions=The color of the canvas background.
Canvas__BackgroundImagePropertyDescriptions=The name of a file containing the background image for the canvas
Canvas__FontSizePropertyDescriptions=The font size of text drawn on the canvas.
Canvas__HeightPercentPropertyDescriptions=Specifies the vertical height of the Canvas as a percentage of the height of the Screen.
Canvas__HeightPropertyDescriptions=Specifies the `Canvas`''s vertical height, measured in pixels.
Canvas__PaintColorPropertyDescriptions=The color in which lines are drawn
Canvas__TextAlignmentPropertyDescriptions=Determines the alignment of the text drawn by DrawText() or DrawAngle() with respect to the point specified by that command\: point at the left of the text, point at the center of the text, or point at the right of the text.
Canvas__VisiblePropertyDescriptions=Specifies whether the Canvas should be visible on the screen. Value is true if the Canvas is showing and false if hidden.
Canvas__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Canvas as a percentage of the width of the Screen.
Canvas__WidthPropertyDescriptions=Specifies the horizontal width of the `Canvas`, measured in pixels.
CenterFromStringProperties=CenterFromString
CenterFromStringPropertyDescriptions=<p>Set the initial center coordinate of the map. The value is specified as a comma-separated pair of decimal latitude and longitude coordinates, for example, <code>42.359144, -71.093612</code>.</p><p>In blocks code, it is recommended for performance reasons to use SetCenter with numerical latitude and longitude rather than convert to the string representation for use with this property.</p>
CharacterEncodingProperties=CharacterEncoding
CharacterEncodingPropertyDescriptions=Sets the character encoding to use when sending and receiving text. The default value is `"UTF-8"
ChartData2D__ColorPropertyDescriptions=Returns the data series color as an alpha-red-green-blue integer.
ChartData2D__SourcePropertyDescriptions=Sets the Source to use for the Data component. Valid choices include AccelerometerSensor, BluetoothClient, CloudDB, DataFile, GyroscopeSensor, LocationSesnro, OrientationSensor, Pedometer, ProximitySensor TinyDB and Web components. The Source value also requires valid DataSourceValue, WebColumn or DataFileColumn properties, depending on the type of the Source attached (the required properties show up in the Properties menu after the Source is changed). If the data identified by the
ChartDataProperties=ChartData
ChartDataPropertyDescriptions=The data series for which to compute the line of best fit.
Chart__BackgroundColorPropertyDescriptions=Returns the chart''s background color as an alpha-red-green-blue integer.
Chart__DescriptionPropertyDescriptions=Returns the description label text of the Chart.
Chart__HeightPercentPropertyDescriptions=Specifies the vertical height of the Chart as a percentage of the height of the Screen.
Chart__HeightPropertyDescriptions=Specifies the vertical height of the Chart, measured in pixels.
Chart__TypePropertyDescriptions=Specifies the chart''s type (area, bar, pie, scatter), which determines how to visualize the data.
Chart__VisiblePropertyDescriptions=Specifies whether the Chart should be visible on the screen. Value is true if the Chart is showing and false if hidden.
Chart__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Chart as a percentage of the width of the Screen.
Chart__WidthPropertyDescriptions=Specifies the horizontal width of the Chart, measured in pixels.
ChatBot__ApiKeyPropertyDescriptions=A ChatGPT API Key. If provided, it will be used instead of the embedded APIKEY in the ChatBot proxy server
ChatBot__ModelPropertyDescriptions=Set the name of the model to use. See https\://appinv.us/chatbot for the current list of supported models. Leaving this blank will result in the default model set by the provider being used
ChatBot__TokenPropertyDescriptions=The MIT Access token to use. MIT App Inventor will automatically fill this value in. You should not need to change it.
CheckBox__BackgroundColorPropertyDescriptions=The background color of the CheckBox as an alpha-red-green-blue integer.
CheckBox__EnabledPropertyDescriptions=True if the CheckBox is active and clickable.
CheckBox__FontBoldPropertyDescriptions=Set to true if the text of the CheckBox should be bold.
CheckBox__FontItalicPropertyDescriptions=Set to true if the text of the CheckBox should be italic.
CheckBox__FontSizePropertyDescriptions=Specifies the text font size of the CheckBox in scale-independent pixels.
CheckBox__FontTypefacePropertyDescriptions=Specifies the text font face of the CheckBox.
CheckBox__HeightPercentPropertyDescriptions=Specifies the vertical height of the CheckBox as a percentage of the height of the Screen.
CheckBox__HeightPropertyDescriptions=Specifies the vertical height of the CheckBox, measured in pixels.
CheckBox__TextColorPropertyDescriptions=Specifies the text color of the CheckBox as an alpha-red-green-blue integer.
CheckBox__TextPropertyDescriptions=Specifies the text displayed by the CheckBox.
CheckBox__VisiblePropertyDescriptions=Specifies whether the CheckBox should be visible on the screen. Value is true if the CheckBox is showing and false if hidden.
CheckBox__WidthPercentPropertyDescriptions=Specifies the horizontal width of the CheckBox as a percentage of the width of the Screen.
CheckBox__WidthPropertyDescriptions=Specifies the horizontal width of the CheckBox, measured in pixels.
CheckedProperties=Checked
CheckedPropertyDescriptions=True if the box is checked, false otherwise.
Circle__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the Circle.
Circle__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the Circle by long-pressing and then dragging the Circle to a new location.
Circle__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the Circle.
Circle__FillColorPropertyDescriptions=The paint color used to fill in the Circle.
Circle__LatitudePropertyDescriptions=The latitude of the center of the circle.
Circle__LongitudePropertyDescriptions=The longitude of the center of the circle.
Circle__RadiusPropertyDescriptions=The radius of the circle in meters.
Circle__StrokeColorPropertyDescriptions=The paint color used to outline the Circle.
Circle__StrokeWidthPropertyDescriptions=The width of the stroke used to outline the Circle.
Circle__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the Circle.
Circle__TypePropertyDescriptions=Returns the type of the feature. For Circles, this returns MapFeature.Circle ("Circle").
Circle__VisiblePropertyDescriptions=Specifies whether the Circle should be visible on the screen. Value is true if the component is showing and false if hidden.
CircularProgress__ColorPropertyDescriptions=Change the indeterminate color of the circular progress bar.
CircularProgress__HeightPercentPropertyDescriptions=Specifies the vertical height of the CircularProgress as a percentage of the height of the Screen.
CircularProgress__HeightPropertyDescriptions=Specifies the vertical height of the CircularProgress, measured in pixels.
CircularProgress__VisiblePropertyDescriptions=Specifies whether the CircularProgress should be visible on the screen. Value is true if the CircularProgress is showing and false if hidden.
CircularProgress__WidthPercentPropertyDescriptions=Specifies the horizontal width of the CircularProgress as a percentage of the width of the Screen.
CircularProgress__WidthPropertyDescriptions=Specifies the horizontal width of the CircularProgress, measured in pixels.
ClickableProperties=Clickable
ClickablePropertyDescriptions=Specifies whether the image should be clickable or not.
CloseScreenAnimationProperties=CloseScreenAnimation
CloseScreenAnimationPropertyDescriptions=The animation for closing current screen and returning to the previous screen. Valid options are default, fade, zoom, slidehorizontal, slidevertical, and none
CloudDB__TokenPropertyDescriptions=This field contains the authentication token used to login to the backed Redis server. For the "DEFAULT" server, do not edit this value, the system will fill it in for you. A system administrator may also provide a special value to you which can be used to share data between multiple projects from multiple people. If using your own Redis server, set a password in the server''s config and enter it here.
ColorChangedEventEnabledProperties=ColorChangedEventEnabled
ColorLeftProperties=ColorLeft
ColorLeftPropertyDescriptions=The color of slider to the left of the thumb.
ColorProperties=Color
ColorRightProperties=ColorRight
ColorRightPropertyDescriptions=The color of slider to the right of the thumb.
ColorsProperties=Colors
ColorsPropertyDescriptions=Returns the Chart''s colors as a List.
ColumnNamesProperties=ColumnNames
ColumnNamesPropertyDescriptions=Returns the elements of the first row of the Data File''s contents.
ColumnPropertyDescriptions=Column property getter method.
ColumnsProperties=Columns
ConsumerKeyProperties=ConsumerKey
ConsumerKeyPropertyDescriptions=ConsumerKey property getter method.
ConsumerSecretProperties=ConsumerSecret
ConsumerSecretPropertyDescriptions=ConsumerSecret property getter method.
ContactNameProperties=ContactName
ContactNamePropertyDescriptions=Returns the full name of the selected contact, or the empty string if a name is unavailable.
ContactPicker__BackgroundColorPropertyDescriptions=Returns the button''s background color
ContactPicker__EnabledPropertyDescriptions=If set, user can tap ContactPicker to cause action.
ContactPicker__FontBoldPropertyDescriptions=If set, ContactPicker text is displayed in bold.
ContactPicker__FontItalicPropertyDescriptions=If set, ContactPicker text is displayed in italics.
ContactPicker__FontSizePropertyDescriptions=Point size for ContactPicker text.
ContactPicker__FontTypefacePropertyDescriptions=Font family for ContactPicker text.
ContactPicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the ContactPicker as a percentage of the height of the Screen.
ContactPicker__HeightPropertyDescriptions=Specifies the vertical height of the ContactPicker, measured in pixels.
ContactPicker__ImagePropertyDescriptions=Image to display on button.
ContactPicker__PhoneNumberPropertyDescriptions=Returns the primary phone number associated with the selected contact, or the empty string if no phone number is associated with the contact.
ContactPicker__PicturePropertyDescriptions=Returns a picture URI for the selected contact, which can be used to retrieve the contact''s photo and other fields.
ContactPicker__ShapePropertyDescriptions=Returns the style of the `ContactPicker`.
ContactPicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a ContactPicker that has an image as background.
ContactPicker__TextAlignmentPropertyDescriptions=Left, center, or right.
ContactPicker__TextColorPropertyDescriptions=Color for button text.
ContactPicker__TextPropertyDescriptions=Text to display on ContactPicker.
ContactPicker__VisiblePropertyDescriptions=Specifies whether the ContactPicker should be visible on the screen. Value is true if the ContactPicker is showing and false if hidden.
ContactPicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ContactPicker as a percentage of the width of the Screen.
ContactPicker__WidthPropertyDescriptions=Specifies the horizontal width of the ContactPicker, measured in pixels.
ContactUriProperties=ContactUri
ContactUriPropertyDescriptions=URI that specifies the location of the contact on the device.
CorrelationCoefficientProperties=CorrelationCoefficient
CorrelationCoefficientPropertyDescriptions=The correlation coefficient of the trendline to the data.
CountryProperties=Country
CountryPropertyDescriptions=Country code to use for speech generation. This can affect the pronounciation. For example, British English (GBR) will sound different from US English (USA). Not every country code will affect every language.
CredentialsJsonProperties=CredentialsJson
CredentialsJsonPropertyDescriptions=The JSON File with credentials for the Service Account
CurrentAddressProperties=CurrentAddress
CurrentAddressPropertyDescriptions=Provides a textual representation of the current address or "No address available".
CurrentPageTitleProperties=CurrentPageTitle
CurrentPageTitlePropertyDescriptions=Title of the page currently viewed
CurrentUrlProperties=CurrentUrl
CurrentUrlPropertyDescriptions=URL of the page currently viewed. This could be different from the Home URL if new pages were visited by following links.
DataFileXColumnProperties=DataFileXColumn
DataFileXColumnPropertyDescriptions=Value used when importing data from a DataFile component
DataFileYColumnProperties=DataFileYColumn
DataFileYColumnPropertyDescriptions=Value used when importing data from a DataFile component
DataFile__ColumnsPropertyDescriptions=Returns a list of columns corresponding to the Data File''s content.
DataFile__LegacyModePropertyDescriptions=Allows app to access files from the root of the external storage directory (legacy mode).
DataFile__RowsPropertyDescriptions=Returns a list of rows corresponding to the Data File''s content.
DataSourceKeyProperties=DataSourceKey
DataSourceKeyPropertyDescriptions=Sets the Data Source key identifier for the value to import from the attached Data Source. An example is the tag of the TinyDB component, which identifies the value. The property is a Designer-only property, and should be changed after setting the Source component of the Chart Data component. A complete list of applicable values for each compatible source is as follows\: * For TinyDB and CloudDB, this is the tag value. * For the AccelerometerSensor, the value should be one of the following\: X Y or Z * For the GyroscopeSensor, the value should be one of the following\: X Y or Z * For the LocationSensor, the value should be one of the following\: latitude, longitude, altitude or speed * For the OrientationSensor, the value should be one of the following\: pitch, azimuth or roll * For the Pedometer, the value should be one of the following\: WalkSteps, SimpleSteps or Distance * For the ProximitySensor, the value should be distance. * For the BluetoothClient, the value represents the prefix to remove from the value. For instance, if values come in the format "t\:12", the prefix can be specified as "t\:", and the prefix will then be removed from the data. No value can be specified if purely numerical values are returned.
DataTypeProperties=DataType
DataTypePropertyDescriptions=Returns the MIME type to pass to the activity.
DataUriProperties=DataUri
DataUriPropertyDescriptions=Returns the data URI that will be used to start the activity.
DatePicker__BackgroundColorPropertyDescriptions=Returns the button''s background color
DatePicker__EnabledPropertyDescriptions=If set, user can tap DatePicker to cause action.
DatePicker__FontBoldPropertyDescriptions=If set, DatePicker text is displayed in bold.
DatePicker__FontItalicPropertyDescriptions=If set, DatePicker text is displayed in italics.
DatePicker__FontSizePropertyDescriptions=Point size for DatePicker text.
DatePicker__FontTypefacePropertyDescriptions=Font family for DatePicker text.
DatePicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the DatePicker as a percentage of the height of the Screen.
DatePicker__HeightPropertyDescriptions=Specifies the vertical height of the DatePicker, measured in pixels.
DatePicker__ImagePropertyDescriptions=Image to display on button.
DatePicker__InstantPropertyDescriptions=the instant of the date that was last picked using the DatePicker.
DatePicker__ShapePropertyDescriptions=Returns the style of the `DatePicker`.
DatePicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a DatePicker that has an image as background.
DatePicker__TextAlignmentPropertyDescriptions=Left, center, or right.
DatePicker__TextColorPropertyDescriptions=Color for button text.
DatePicker__TextPropertyDescriptions=Text to display on DatePicker.
DatePicker__VisiblePropertyDescriptions=Specifies whether the DatePicker should be visible on the screen. Value is true if the DatePicker is showing and false if hidden.
DatePicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the DatePicker as a percentage of the width of the Screen.
DatePicker__WidthPropertyDescriptions=Specifies the horizontal width of the DatePicker, measured in pixels.
DayProperties=Day
DayPropertyDescriptions=the Day of the month that was last picked using the DatePicker.
DefaultFileScopeProperties=DefaultFileScope
DefaultFileScopePropertyDescriptions=Specifies the default scope used when components access files. Note that the <a href\="/reference/components/storage.html\#File" target\="_blank">File</a> component has its own property for controlling file scopes.
DefaultRedisServerProperties=DefaultRedisServer
DefaultRedisServerPropertyDescriptions=The Default Redis Server to use.
DefaultScopeProperties=DefaultScope
DefaultScopePropertyDescriptions=Specifies the default scope for files accessed using the File component. The App scope should work for most apps. Legacy mode can be used for apps that predate the newer constraints in Android on app file access.
DefaultURLProperties=DefaultURL
DefaultURLPropertyDescriptions=Property for DefaultURL
DelimiterByteProperties=DelimiterByte
DelimiterBytePropertyDescriptions=Sets the delimiter byte to use when passing a negative number for the numberOfBytes parameter when calling ReceiveText, ReceiveSignedBytes, or ReceiveUnsignedBytes. Those functions will continue to read bytes until they encounter the value specified here. The default delimiter is 0, the null byte.
DescriptionProperties=Description
DetectColorProperties=DetectColor
DetectColorPropertyDescriptions=Whether the sensor should detect color or light. True indicates that the sensor should detect color; False indicates that the sensor should detect light. If the DetectColor property is set to True, the BelowRange, WithinRange, and AboveRange events will not occur and the sensor will not generate color. If the DetectColor property is set to False, the ColorChanged event will not occur.
DeveloperBucketProperties=DeveloperBucket
DeveloperBucketPropertyDescriptions=Specifies the unique developer path of the Firebase.
DirectMessagesProperties=DirectMessages
DirectMessagesPropertyDescriptions=This property contains a list of the most recent messages mentioning the logged-in user. Initially, the list is empty. To set it, the program must\: <ol> <li> Call the <code>Authorize</code> method.</li> <li> Wait for the <code>Authorized</code> event.</li> <li> Call the <code>RequestDirectMessages</code> method.</li> <li> Wait for the <code>DirectMessagesReceived</code> event.</li></ol>The value of this property will then be set to the list of direct messages retrieved (and maintain that value until any subsequent call to <code>RequestDirectMessages</code>).
DisconnectOnErrorProperties=DisconnectOnError
DisconnectOnErrorPropertyDescriptions=Disconnects BluetoothClient automatically when an error occurs.
DistanceIntervalProperties=DistanceInterval
DistanceIntervalPropertyDescriptions=Determines the minimum distance interval, in meters, that the sensor will try to use for sending out location updates. For example, if this is set to 5, then the sensor will fire a LocationChanged event only after 5 meters have been traversed. However, the sensor does not guarantee that an update will be received at exactly the distance interval. It may take more than 5 meters to fire an event, for instance.
DistanceProperties=Distance
DraggableProperties=Draggable
DriveMotorsProperties=DriveMotors
DriveMotorsPropertyDescriptions=The motor ports that are used for driving\: the left wheel''s motor port followed by the right wheel''s motor port.
EastLongitudeProperties=EastLongitude
EastLongitudePropertyDescriptions=The east edge of the rectangle, in decimal degrees east of the prime meridian.
ElapsedTimeProperties=ElapsedTime
ElapsedTimePropertyDescriptions=Time elapsed in milliseconds since the pedometer was started.
ElementsFromPairsProperties=ElementsFromPairs
ElementsFromPairsPropertyDescriptions=Comma separated list of Elements to use for the data series. Values are formatted as follows\: x1,y1,x2,y2,x3,y3. Values are taken in pairs, and an entry is formed from the x and y values.
ElementsFromStringProperties=ElementsFromString
ElementsProperties=Elements
EmailAddressListProperties=EmailAddressList
EmailAddressListPropertyDescriptions=Returns a list of email addresses associated with the selected contact.
EmailAddressProperties=EmailAddress
EmailAddressPropertyDescriptions=Returns the primary email address of the selected contact, or the empty string if an email address is unavailable.
EmailPicker__BackgroundColorPropertyDescriptions=The background color of the input box. You can choose a color by name in the Designer or in the Blocks Editor. The default background color is ''default'' (shaded 3-D look).
EmailPicker__EnabledPropertyDescriptions=Whether the user can enter text into the EmailPicker. By default, this is true.
EmailPicker__FontBoldPropertyDescriptions=Whether the font for the text should be bold. By default, it is not.
EmailPicker__FontItalicPropertyDescriptions=Whether the text should appear in italics. By default, it does not.
EmailPicker__FontSizePropertyDescriptions=The font size for the text. By default, it is 14.0 points.
EmailPicker__FontTypefacePropertyDescriptions=The font for the text. The value can be changed in the Designer.
EmailPicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the EmailPicker as a percentage of the height of the Screen.
EmailPicker__HeightPropertyDescriptions=Specifies the vertical height of the EmailPicker, measured in pixels.
EmailPicker__HintColorPropertyDescriptions=Specifies the color of the hint of the EmailPicker.
EmailPicker__HintPropertyDescriptions=Text that should appear faintly in the EmailPicker to provide a hint as to what the user should enter. This can only be seen if the Text property is empty.
EmailPicker__TextAlignmentPropertyDescriptions=Whether the text should be left justified, centered, or right justified. By default, text is left justified.
EmailPicker__TextColorPropertyDescriptions=The color for the text. You can choose a color by name in the Designer or in the Blocks Editor. The default text color is black.
EmailPicker__TextPropertyDescriptions=Returns the textbox contents.
EmailPicker__VisiblePropertyDescriptions=Specifies whether the EmailPicker should be visible on the screen. Value is true if the EmailPicker is showing and false if hidden.
EmailPicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the EmailPicker as a percentage of the width of the Screen.
EmailPicker__WidthPropertyDescriptions=Specifies the horizontal width of the EmailPicker, measured in pixels.
EnableInfoboxProperties=EnableInfobox
EnablePanProperties=EnablePan
EnablePanPropertyDescriptions=Enable two-finger panning of the Map
EnableRotationProperties=EnableRotation
EnableRotationPropertyDescriptions=Enable rotating the map based on the user''s orientation.
EnableSpeedRegulationProperties=EnableSpeedRegulation
EnableSpeedRegulationPropertyDescriptions=Specifies whether to keep motor rotation at constant speed.
EnableZoomProperties=EnableZoom
EnableZoomPropertyDescriptions=Set whether the user can zoom the map using touch gestures. This value does not affect whether the user can zoom using the zoom controls provided by <a href\="\#Map.ShowZoom">ShowZoom</a>.
EnabledProperties=Enabled
EndLatitudeProperties=EndLatitude
EndLatitudePropertyDescriptions=The latitude of the end location.
EndLocationProperties=EndLocation
EndLocationPropertyDescriptions=Set the end location.
EndLongitudeProperties=EndLongitude
EndLongitudePropertyDescriptions=The longitude of the end location.
Ev3ColorSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the light level goes above the TopOfRange.
Ev3ColorSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the light level goes below the BottomOfRange.
Ev3ColorSensor__ColorChangedEventEnabledPropertyDescriptions=Whether the ColorChanged event should fire when the Mode property is set to "color" and the detected color changes.
Ev3ColorSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the light level goes between the BottomOfRange and the TopOfRange.
Ev3Motors__StopBeforeDisconnectPropertyDescriptions=Whether to stop the motor before disconnecting.
Ev3Motors__WheelDiameterPropertyDescriptions=Specifies the diameter of the wheels attached on motors.
Ev3TouchSensor__PressedEventEnabledPropertyDescriptions=Specifies whether the Pressed event should fire when the touch sensor is pressed.
Ev3UltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the distance goes above the TopOfRange.
Ev3UltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the distance goes below the BottomOfRange.
Ev3UltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the distance goes between the BottomOfRange and the TopOfRange.
ExponentialBaseProperties=ExponentialBase
ExponentialBasePropertyDescriptions=The base of the exponential term in the equation y \= a*b^x.
ExponentialCoefficientProperties=ExponentialCoefficient
ExponentialCoefficientPropertyDescriptions=The coefficient of the exponential term in the equation y \= a*b^x.
ExtendMovesOutsideCanvasProperties=ExtendMovesOutsideCanvas
ExtendMovesOutsideCanvasPropertyDescriptions=Determines whether moves can extend beyond the canvas borders. Default is false. This should normally be false, and the property is provided for backwards compatibility.
ExtendProperties=Extend
ExtendPropertyDescriptions=Whether to extend the line of best fit beyond the data.
ExtraKeyProperties=ExtraKey
ExtraKeyPropertyDescriptions=Returns the extra key that will be passed to the activity.DEPRECATED\: New code should use Extras property instead.
ExtraValueProperties=ExtraValue
ExtraValuePropertyDescriptions=Returns the extra value that will be passed to the activity.DEPRECATED\: New code should use Extras property instead.
ExtrasProperties=Extras
ExtrasPropertyDescriptions=Specifies the list of key-value pairs that will be passed as extra data to the activity.
FeatureCollection__FeaturesPropertyDescriptions=The list of features placed on this FeatureCollection. This list also includes any features created by calls to FeatureFromDescription
FeatureCollection__HeightPercentPropertyDescriptions=Specifies the vertical height of the FeatureCollection as a percentage of the height of the Screen.
FeatureCollection__HeightPropertyDescriptions=Specifies the vertical height of the FeatureCollection, measured in pixels.
FeatureCollection__SourcePropertyDescriptions=Specifies the source URL used to populate the feature collection. If the feature collection was not loaded from a URL, this will be the empty string.
FeatureCollection__VisiblePropertyDescriptions=Specifies whether the FeatureCollection should be visible on the screen. Value is true if the FeatureCollection is showing and false if hidden.
FeatureCollection__WidthPercentPropertyDescriptions=Specifies the horizontal width of the FeatureCollection as a percentage of the width of the Screen.
FeatureCollection__WidthPropertyDescriptions=Specifies the horizontal width of the FeatureCollection, measured in pixels.
FeaturesFromGeoJSONProperties=FeaturesFromGeoJSON
FeaturesFromGeoJSONPropertyDescriptions=Loads a collection of features from the given string. If the string is not valid GeoJSON, the ErrorLoadingFeatureCollection error will be run with url \= <string>.
FeaturesProperties=Features
FilePicker__ActionPropertyDescriptions=Sets the desired action for the FilePicker. One of\: - Pick Existing File\: Open an existing file - Pick Directory\: Open an existing directory - Pick New File\: Create a new file for saving
FilePicker__BackgroundColorPropertyDescriptions=Returns the button''s background color
FilePicker__EnabledPropertyDescriptions=If set, user can tap FilePicker to cause action.
FilePicker__FontBoldPropertyDescriptions=If set, FilePicker text is displayed in bold.
FilePicker__FontItalicPropertyDescriptions=If set, FilePicker text is displayed in italics.
FilePicker__FontSizePropertyDescriptions=Point size for FilePicker text.
FilePicker__FontTypefacePropertyDescriptions=Font family for FilePicker text.
FilePicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the FilePicker as a percentage of the height of the Screen.
FilePicker__HeightPropertyDescriptions=Specifies the vertical height of the FilePicker, measured in pixels.
FilePicker__ImagePropertyDescriptions=Image to display on button.
FilePicker__SelectionPropertyDescriptions=Returns the selected file, possibly as a content URI.
FilePicker__ShapePropertyDescriptions=Returns the style of the `FilePicker`.
FilePicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a FilePicker that has an image as background.
FilePicker__TextAlignmentPropertyDescriptions=Left, center, or right.
FilePicker__TextColorPropertyDescriptions=Color for button text.
FilePicker__TextPropertyDescriptions=Text to display on FilePicker.
FilePicker__VisiblePropertyDescriptions=Specifies whether the FilePicker should be visible on the screen. Value is true if the FilePicker is showing and false if hidden.
FilePicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the FilePicker as a percentage of the width of the Screen.
FilePicker__WidthPropertyDescriptions=Specifies the horizontal width of the FilePicker, measured in pixels.
File__LegacyModePropertyDescriptions=Allows app to access files from the root of the external storage directory (legacy mode).
FillColorProperties=FillColor
FillOpacityProperties=FillOpacity
FillOpacityPropertyDescriptions=The opacity of the interior of the map feature.
FirebaseTokenProperties=FirebaseToken
FirebaseTokenPropertyDescriptions=Specifies the token for the default Firebase.
FirebaseURLProperties=FirebaseURL
FirebaseURLPropertyDescriptions=Gets the URL for this FirebaseDB.
FollowLinksProperties=FollowLinks
FollowLinksPropertyDescriptions=Determines whether to follow links when they are tapped in the WebViewer. If you follow links, you can use GoBack and GoForward to navigate the browser history.
FollowersProperties=Followers
FollowersPropertyDescriptions=This property contains a list of the followers of the logged-in user. Initially, the list is empty. To set it, the program must\: <ol> <li> Call the <code>Authorize</code> method.</li> <li> Wait for the <code>IsAuthorized</code> event.</li> <li> Call the <code>RequestFollowers</code> method.</li> <li> Wait for the <code>FollowersReceived</code> event.</li></ol>The value of this property will then be set to the list of followers (and maintain its value until any subsequent call to <code>RequestFollowers</code>).
FontBoldProperties=FontBold
FontItalicProperties=FontItalic
FontSizeDetailProperties=FontSizeDetail
FontSizeDetailPropertyDescriptions=The text size of the listview stringItems.
FontSizeProperties=FontSize
FontTypefaceDetailProperties=FontTypefaceDetail
FontTypefaceDetailPropertyDescriptions=Returns the label''s text''s font face as default, serif, sans serif, or monospace.
FontTypefaceProperties=FontTypeface
FriendTimelineProperties=FriendTimeline
FriendTimelinePropertyDescriptions=This property contains the 20 most recent messages of users being followed. Initially, the list is empty. To set it, the program must\: <ol> <li> Call the <code>Authorize</code> method.</li> <li> Wait for the <code>IsAuthorized</code> event.</li> <li> Specify users to follow with one or more calls to the <code>Follow</code> method.</li> <li> Call the <code>RequestFriendTimeline</code> method.</li> <li> Wait for the <code>FriendTimelineReceived</code> event.</li> </ol>The value of this property will then be set to the list of messages (and maintain its value until any subsequent call to <code>RequestFriendTimeline</code>.
FullScreenProperties=FullScreen
FullScreenPropertyDescriptions=Returns whether the VideoPlayer''s video is currently being shown in fullscreen mode or not.
FusiontablesControl__ApiKeyPropertyDescriptions=Setter for the app developer''s API key.
GameClient__ServiceURLPropertyDescriptions=Set the URL of the game server.
GameClient__UserEmailAddressPropertyDescriptions=The email address that is being used as the player id for this game client. At present, users must set this manually in oder to join a game. But this property will change in the future so that is set automatically, and users will not be able to change it.
GameIdProperties=GameId
GameIdPropertyDescriptions=The game name for this application. The same game ID can have one or more game instances.
GenerateColorProperties=GenerateColor
GenerateColorPropertyDescriptions=The color that should generated by the sensor. Only None, Red, Green, or Blue are valid values. The sensor will not generate color when the DetectColor property is set to True.
GenerateLightProperties=GenerateLight
GenerateLightPropertyDescriptions=Whether the light sensor should generate light.
GoogleVoiceEnabledProperties=GoogleVoiceEnabled
GoogleVoiceEnabledPropertyDescriptions=If true, then SendMessage will attempt to send messages over Wifi using Google Voice. This requires that the Google Voice app must be installed and set up on the phone or tablet, with a Google Voice account. If GoogleVoiceEnabled is false, the device must have phone and texting service in order to send or receive messages with this component.
GridEnabledProperties=GridEnabled
GridEnabledPropertyDescriptions=Returns a boolean indicating whether the grid is enabled on the Chart.
GyroscopeSensor__AvailablePropertyDescriptions=Indicates whether a gyroscope sensor is available.
GyroscopeSensor__EnabledPropertyDescriptions=Enabled property getter method.
HTMLContentProperties=HTMLContent
HTMLContentPropertyDescriptions=Returns the content of the Label as HTML. This is only useful if the HTMLFormat property is true.
HTMLFormatProperties=HTMLFormat
HTMLFormatPropertyDescriptions=If true, then this label will show html text else it will show plain text. Note\: Not all HTML is supported.
HasAccuracyProperties=HasAccuracy
HasAccuracyPropertyDescriptions=If `true
HasAltitudeProperties=HasAltitude
HasAltitudePropertyDescriptions=If `true
HasLongitudeLatitudeProperties=HasLongitudeLatitude
HasLongitudeLatitudePropertyDescriptions=If `true
HasMarginsProperties=HasMargins
HasMarginsPropertyDescriptions=Reports whether or not the label appears with margins. All four margins (left, right, top, bottom) are the same. This property has no effect in the designer, where labels are always shown with margins.
HeadingProperties=Heading
HeightPercentProperties=HeightPercent
HeightProperties=Height
HighByteFirstProperties=HighByteFirst
HighByteFirstPropertyDescriptions=Returns `true
HighContrastProperties=HighContrast
HighContrastPropertyDescriptions=When checked, we will use high contrast mode
HintColorProperties=HintColor
HintProperties=Hint
HolePointsFromStringProperties=HolePointsFromString
HolePointsFromStringPropertyDescriptions=Constructs holes in a polygon from a given list of coordinates per hole.
HolePointsProperties=HolePoints
HolePointsPropertyDescriptions=Specifies the points of any holes in the `Polygon`. The `HolePoints` property is a list of lists, with each sublist containing `(latitude, longitude)` points representing a hole.
HomeUrlProperties=HomeUrl
HomeUrlPropertyDescriptions=URL of the page the WebViewer should initially open to. Setting this will load the page.
HorizontalArrangement__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the HorizontalArrangement are aligned horizontally. The choices are\: 1 \= left aligned, 2 \= right aligned, 3 \= horizontally centered. Alignment has no effect if the arrangement''s width is automatic.
HorizontalArrangement__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the HorizontalArrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.
HorizontalArrangement__BackgroundColorPropertyDescriptions=Returns the background color of the HorizontalArrangement
HorizontalArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the HorizontalArrangement as a percentage of the height of the Screen.
HorizontalArrangement__HeightPropertyDescriptions=Specifies the vertical height of the HorizontalArrangement, measured in pixels.
HorizontalArrangement__ImagePropertyDescriptions=Returns the path of the background image of the `HorizontalArrangement`.
HorizontalArrangement__VisiblePropertyDescriptions=Specifies whether the HorizontalArrangement should be visible on the screen. Value is true if the HorizontalArrangement is showing and false if hidden.
HorizontalArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the HorizontalArrangement as a percentage of the width of the Screen.
HorizontalArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the HorizontalArrangement, measured in pixels.
HorizontalScrollArrangement__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the HorizontalScrollArrangement are aligned horizontally. The choices are\: 1 \= left aligned, 2 \= right aligned, 3 \= horizontally centered. Alignment has no effect if the arrangement''s width is automatic.
HorizontalScrollArrangement__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the HorizontalScrollArrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.
HorizontalScrollArrangement__BackgroundColorPropertyDescriptions=Returns the background color of the HorizontalScrollArrangement
HorizontalScrollArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the HorizontalScrollArrangement as a percentage of the height of the Screen.
HorizontalScrollArrangement__HeightPropertyDescriptions=Specifies the vertical height of the HorizontalScrollArrangement, measured in pixels.
HorizontalScrollArrangement__ImagePropertyDescriptions=Returns the path of the background image of the `HorizontalScrollArrangement`.
HorizontalScrollArrangement__VisiblePropertyDescriptions=Specifies whether the HorizontalScrollArrangement should be visible on the screen. Value is true if the HorizontalScrollArrangement is showing and false if hidden.
HorizontalScrollArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the HorizontalScrollArrangement as a percentage of the width of the Screen.
HorizontalScrollArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the HorizontalScrollArrangement, measured in pixels.
HourProperties=Hour
HourPropertyDescriptions=The hour of the last time set using the time picker. The hour is in a 24 hour format. If the last time set was 11\:53 pm, this property will return 23.
HumidityProperties=Humidity
HumidityPropertyDescriptions=The relative ambient humidity as a percentage, if the sensor is available and enabled.
Hygrometer__AvailablePropertyDescriptions=Specifies whether or not the device has the hardware to support the Hygrometer component.
Hygrometer__EnabledPropertyDescriptions=If enabled, then device will listen for changes.
IconProperties=Icon
IconPropertyDescriptions=The image used for your App''s display icon should be a square png or jpeg image with dimensions up to 1024x1024 pixels. Larger images may cause compiling or installing the app to fail. The build server will generate images of standard dimensions for Android devices.
IgnoreSslErrorsProperties=IgnoreSslErrors
IgnoreSslErrorsPropertyDescriptions=Determine whether or not to ignore SSL errors. Set to true to ignore errors. Use this to accept self signed certificates from websites.
ImageAssetProperties=ImageAsset
ImageAssetPropertyDescriptions=Specifies the image shown for the `Marker`. If set to the empty string "", then the default marker icon will be used.
ImageBot__ApiKeyPropertyDescriptions=Specifies the ApiKey used to authenticate with the ImageBot.
ImageBot__TokenPropertyDescriptions=The MIT Access token to use. MIT App Inventor will automatically fill this value in. You should not need to change it.
ImageHeightProperties=ImageHeight
ImageHeightPropertyDescriptions=The image height of the listview image stringItems.
ImagePicker__BackgroundColorPropertyDescriptions=Returns the button''s background color
ImagePicker__EnabledPropertyDescriptions=If set, user can tap ImagePicker to cause action.
ImagePicker__FontBoldPropertyDescriptions=If set, ImagePicker text is displayed in bold.
ImagePicker__FontItalicPropertyDescriptions=If set, ImagePicker text is displayed in italics.
ImagePicker__FontSizePropertyDescriptions=Point size for ImagePicker text.
ImagePicker__FontTypefacePropertyDescriptions=Font family for ImagePicker text.
ImagePicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the ImagePicker as a percentage of the height of the Screen.
ImagePicker__HeightPropertyDescriptions=Specifies the vertical height of the ImagePicker, measured in pixels.
ImagePicker__ImagePropertyDescriptions=Image to display on button.
ImagePicker__SelectionPropertyDescriptions=Path to the file containing the image that was selected.
ImagePicker__ShapePropertyDescriptions=Returns the style of the `ImagePicker`.
ImagePicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a ImagePicker that has an image as background.
ImagePicker__TextAlignmentPropertyDescriptions=Left, center, or right.
ImagePicker__TextColorPropertyDescriptions=Color for button text.
ImagePicker__TextPropertyDescriptions=Text to display on ImagePicker.
ImagePicker__VisiblePropertyDescriptions=Specifies whether the ImagePicker should be visible on the screen. Value is true if the ImagePicker is showing and false if hidden.
ImagePicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ImagePicker as a percentage of the width of the Screen.
ImagePicker__WidthPropertyDescriptions=Specifies the horizontal width of the ImagePicker, measured in pixels.
ImageProperties=Image
ImageSprite__EnabledPropertyDescriptions=Controls whether the ImageSprite moves and can be interacted with through collisions, dragging, touching, and flinging.
ImageSprite__HeadingPropertyDescriptions=Returns the ImageSprite''s heading in degrees above the positive x-axis. Zero degrees is toward the right of the screen; 90 degrees is toward the top of the screen.
ImageSprite__HeightPropertyDescriptions=The height of the ImageSprite in pixels.
ImageSprite__IntervalPropertyDescriptions=The interval in milliseconds at which the ImageSprite''s position is updated. For example, if the interval is 50 and the speed is 10, then every 50 milliseconds the sprite will move 10 pixels in the heading direction.
ImageSprite__PicturePropertyDescriptions=The picture that determines the ImageSprite''s appearance.
ImageSprite__SpeedPropertyDescriptions=The number of pixels that the ImageSprite should move every interval, if enabled.
ImageSprite__VisiblePropertyDescriptions=Whether the ImageSprite is visible.
ImageSprite__WidthPropertyDescriptions=The width of the ImageSprite in pixels.
ImageSprite__XPropertyDescriptions=The horizontal coordinate of the left edge of the ImageSprite, increasing as the ImageSprite moves right.
ImageSprite__YPropertyDescriptions=The vertical coordinate of the top edge of the ImageSprite, increasing as the ImageSprite moves down.
ImageSprite__ZPropertyDescriptions=How the `ImageSprite` should be layered relative to other
ImageWidthProperties=ImageWidth
ImageWidthPropertyDescriptions=The image width of the listview image.
Image__HeightPercentPropertyDescriptions=Specifies the vertical height of the Image as a percentage of the height of the Screen.
Image__HeightPropertyDescriptions=Specifies the vertical height of the Image, measured in pixels.
Image__PicturePropertyDescriptions=Returns the path of the image''s picture.
Image__VisiblePropertyDescriptions=Specifies whether the Image should be visible on the screen. Value is true if the Image is showing and false if hidden.
Image__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Image as a percentage of the width of the Screen.
Image__WidthPropertyDescriptions=Specifies the horizontal width of the Image, measured in pixels.
IndeterminateColorProperties=IndeterminateColor
IndeterminateColorPropertyDescriptions=Change the indeterminate color of the progress bar.
IndeterminateProperties=Indeterminate
IndeterminatePropertyDescriptions=Change the indeterminate mode for this progress bar. In indeterminate mode, the progress is ignored and the progress bar shows an infinite animation instead.
InstanceIdProperties=InstanceId
InstanceIdPropertyDescriptions=The game instance id. Taken together,the game ID and the instance ID uniquely identify the game.
InstantProperties=Instant
IntervalProperties=Interval
InvertMaskProperties=InvertMask
InvertMaskPropertyDescriptions=Specifies whether the mask used for editing should have its alpha channel inverted.
InvitedInstancesProperties=InvitedInstances
InvitedInstancesPropertyDescriptions=The set of game instances to which this player has been invited but has not yet joined. To ensure current values are returned, first invoke GetInstanceLists.
IsAcceptingProperties=IsAccepting
IsAcceptingPropertyDescriptions=Returns true if this BluetoothServer component is accepting an incoming connection.
IsConnectedProperties=IsConnected
IsConnectedPropertyDescriptions=On devices with API level 14 (LEVEL_ICE_CREAM_SANDWICH) or higher, this property returned is accurate. But on old devices with API level lower than 14, it may not return the current state of connection(e.g., it might be disconnected but you may not know until you attempt to read/write the socket.
IsInitializedProperties=IsInitialized
IsInitializedPropertyDescriptions=Returns true when the Serial has been initialized.
IsOpenProperties=IsOpen
IsOpenPropertyDescriptions=Returns true when the Serial connection is open.
IsPlayingProperties=IsPlaying
IsPlayingPropertyDescriptions=Reports whether the media is playing
ItemBackgroundColorProperties=ItemBackgroundColor
ItemBackgroundColorPropertyDescriptions=The background color of the ListPicker items.
ItemTextColorProperties=ItemTextColor
ItemTextColorPropertyDescriptions=The text color of the ListPicker items.
JoinedInstancesProperties=JoinedInstances
JoinedInstancesPropertyDescriptions=The set of game instances in which this player is participating. To ensure current values are returned, first invoke GetInstanceLists.
KeepRunningWhenOnPauseProperties=KeepRunningWhenOnPause
KeepRunningWhenOnPausePropertyDescriptions=Returns value of keepRunningWhenOnPause.
KeyFileProperties=KeyFile
KeyFilePropertyDescriptions=Specifies the path of the private key file. This key file is used to get access to the FusionTables API.
LabelProperties=Label
LabelPropertyDescriptions=Returns the label text of the data series.
Label__BackgroundColorPropertyDescriptions=Returns the label''s background color as an alpha-red-green-blue integer.
Label__FontBoldPropertyDescriptions=Returns true if the label''s text should be bold. If bold has been requested, this property will return true, even if the font does not support bold.
Label__FontItalicPropertyDescriptions=Returns true if the label''s text should be italic. If italic has been requested, this property will return true, even if the font does not support italic.
Label__FontSizePropertyDescriptions=Returns the label''s text''s font size, measured in sp(scale-independent pixels).
Label__FontTypefacePropertyDescriptions=Returns the label''s text''s font face as default, serif, sans serif, or monospace.
Label__HeightPercentPropertyDescriptions=Specifies the vertical height of the Label as a percentage of the height of the Screen.
Label__HeightPropertyDescriptions=Specifies the vertical height of the Label, measured in pixels.
Label__TextAlignmentPropertyDescriptions=Returns the alignment of the label''s text\: center, normal (e.g., left-justified if text is written left to right), or opposite (e.g., right-justified if text is written left to right).
Label__TextColorPropertyDescriptions=Returns the label''s text color as an alpha-red-green-blue integer.
Label__TextPropertyDescriptions=Returns the text displayed by the label.
Label__VisiblePropertyDescriptions=Specifies whether the Label should be visible on the screen. Value is true if the Label is showing and false if hidden.
Label__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Label as a percentage of the width of the Screen.
Label__WidthPropertyDescriptions=Specifies the horizontal width of the Label, measured in pixels.
LabelsFromStringProperties=LabelsFromString
LabelsFromStringPropertyDescriptions=Specifies the labels to set to the Chart''s X Axis, provided the current view is a Chart with an X Axis. The labels are specified as a single comma-separated values String (meaning each value is separated by a comma). See
LabelsProperties=Labels
LabelsPropertyDescriptions=Returns a List of Labels set to the X Axis.
LanguageProperties=Language
LastMessageProperties=LastMessage
LastMessagePropertyDescriptions=Returns the content of the most recently received tag.
LatitudeProperties=Latitude
LeaderProperties=Leader
LeaderPropertyDescriptions=The game''s leader. At any time, each game instance has only one leader, but the leader may change with time. Initially, the leader is the game instance creator. Application writers determine special properties of the leader. The leader value is updated each time a successful communication is made with the server.
LegacyModeProperties=LegacyMode
LegendEnabledProperties=LegendEnabled
LegendEnabledPropertyDescriptions=Returns a boolean indicating whether the legend is enabled on the Chart.
LightSensor__AvailablePropertyDescriptions=Specifies whether or not the device has the hardware to support the LightSensor component.
LightSensor__EnabledPropertyDescriptions=If enabled, then device will listen for changes.
LineString__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the LineString.
LineString__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the LineString by long-pressing and then dragging the LineString to a new location.
LineString__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the LineString.
LineString__PointsFromStringPropertyDescriptions=Set the points of the LineString from a specially-coded character string of the form\: [[latitude1, longitude1], [latitude2, longitude2], ...]
LineString__PointsPropertyDescriptions=The list of points, as pairs of latitudes and longitudes, in the `LineString`.
LineString__StrokeColorPropertyDescriptions=The paint color used to outline the LineString.
LineString__StrokeWidthPropertyDescriptions=Sets or gets the width of the stroke used to outline the `LineString`.
LineString__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the LineString.
LineString__TypePropertyDescriptions=Returns the type of the map feature. For LineString, this returns MapFeature.LineString ("LineString").
LineString__VisiblePropertyDescriptions=Specifies whether the LineString should be visible on the screen. Value is true if the component is showing and false if hidden.
LineTypeProperties=LineType
LineTypePropertyDescriptions=Changes the Line Type of the Data Series, provided that the Data component is attached to a Chart that has the type set to a line-based Chart(applies to area and line Chart types). Valid types include linear, curved or stepped.
LineWidthProperties=LineWidth
LineWidthPropertyDescriptions=The width of lines drawn on the canvas.
LinearCoefficientProperties=LinearCoefficient
LinearCoefficientPropertyDescriptions=The coefficient of the linear term in the trendline.
LinearProgress__VisiblePropertyDescriptions=Specifies whether the LinearProgress should be visible on the screen. Value is true if the LinearProgress is showing and false if hidden.
LinearProgress__WidthPercentPropertyDescriptions=Specifies the horizontal width of the LinearProgress as a percentage of the width of the Screen.
LinearProgress__WidthPropertyDescriptions=Specifies the horizontal width of the LinearProgress, measured in pixels.
ListDataProperties=ListData
ListDataPropertyDescriptions=Returns the data to be displayed in the ListView as a JsonString. Designer only property.
ListPicker__BackgroundColorPropertyDescriptions=Returns the button''s background color
ListPicker__ElementsFromStringPropertyDescriptions=Set the list of choices from a string of comma-separated values.
ListPicker__ElementsPropertyDescriptions=Specifies the list of choices to display.
ListPicker__EnabledPropertyDescriptions=If set, user can tap ListPicker to cause action.
ListPicker__FontBoldPropertyDescriptions=If set, ListPicker text is displayed in bold.
ListPicker__FontItalicPropertyDescriptions=If set, ListPicker text is displayed in italics.
ListPicker__FontSizePropertyDescriptions=Point size for ListPicker text.
ListPicker__FontTypefacePropertyDescriptions=Font family for ListPicker text.
ListPicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the ListPicker as a percentage of the height of the Screen.
ListPicker__HeightPropertyDescriptions=Specifies the vertical height of the ListPicker, measured in pixels.
ListPicker__ImagePropertyDescriptions=Image to display on button.
ListPicker__SelectionIndexPropertyDescriptions=The index of the currently selected item, starting at 1. If no item is selected, the value will be 0. If an attempt is made to set this to a number less than 1 or greater than the number of items in the ListPicker, SelectionIndex will be set to 0, and Selection will be set to the empty text.
ListPicker__SelectionPropertyDescriptions=The selected item. When directly changed by the programmer, the SelectionIndex property is also changed to the first item in the ListPicker with the given value. If the value does not appear, SelectionIndex will be set to 0.
ListPicker__ShapePropertyDescriptions=Returns the style of the `ListPicker`.
ListPicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a ListPicker that has an image as background.
ListPicker__ShowFilterBarPropertyDescriptions=Returns current state of ShowFilterBar indicating if Search Filter Bar will be displayed on ListPicker or not
ListPicker__TextAlignmentPropertyDescriptions=Left, center, or right.
ListPicker__TextColorPropertyDescriptions=Color for button text.
ListPicker__TextPropertyDescriptions=Text to display on ListPicker.
ListPicker__TitlePropertyDescriptions=Optional title displayed at the top of the list of choices.
ListPicker__VisiblePropertyDescriptions=Specifies whether the ListPicker should be visible on the screen. Value is true if the ListPicker is showing and false if hidden.
ListPicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ListPicker as a percentage of the width of the Screen.
ListPicker__WidthPropertyDescriptions=Specifies the horizontal width of the ListPicker, measured in pixels.
ListViewLayoutProperties=ListViewLayout
ListViewLayoutPropertyDescriptions=Returns type of layout selected to display. Designer only property.
ListView__BackgroundColorPropertyDescriptions=The color of the listview background.
ListView__ElementsFromStringPropertyDescriptions=The TextView elements specified as a string with the stringItems separated by commas such as\: Cheese,Fruit,Bacon,Radish. Each word before the comma will be an element in the list.
ListView__ElementsPropertyDescriptions=List of elements to show in the ListView. Depending on the ListView, this may be a list of strings or a list of 3-element sub-lists containing Text, Description, and Image file name.
ListView__FontSizePropertyDescriptions=The text size of the listview stringItems.
ListView__FontTypefacePropertyDescriptions=Returns the label''s text''s font face as default, serif, sans serif, or monospace.
ListView__HeightPercentPropertyDescriptions=Specifies the vertical height of the ListView as a percentage of the height of the Screen.
ListView__HeightPropertyDescriptions=Determines the height of the list on the view.
ListView__SelectionIndexPropertyDescriptions=The index of the currently selected item, starting at 1. If no item is selected, the value will be 0. If an attempt is made to set this to a number less than 1 or greater than the number of stringItems in the ListView, SelectionIndex will be set to 0, and Selection will be set to the empty text.
ListView__SelectionPropertyDescriptions=Returns the text last selected in the ListView.
ListView__ShowFilterBarPropertyDescriptions=Sets visibility of ShowFilterBar. True will show the bar, False will hide it.
ListView__TextColorPropertyDescriptions=The text color of the listview stringItems.
ListView__VisiblePropertyDescriptions=Specifies whether the ListView should be visible on the screen. Value is true if the ListView is showing and false if hidden.
ListView__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ListView as a percentage of the width of the Screen.
ListView__WidthPropertyDescriptions=Determines the width of the list on the view.
LoadingDialogMessageProperties=LoadingDialogMessage
LoadingDialogMessagePropertyDescriptions=Setter for the loading dialog''s message.
LocationSensorProperties=LocationSensor
LocationSensorPropertyDescriptions=Uses the provided LocationSensor for user location data rather than the built-in location provider.
LocationSensor__EnabledPropertyDescriptions=Indicates whether the user has specified that the sensor should listen for location changes and raise the corresponding events.
LocationSensor__LatitudePropertyDescriptions=The most recently available latitude value in degrees reported to 5 decimal places. If no value is available, 0 will be returned. Latitude is a value between 90 (north) and -90 (south), where 0 marks the Equator.
LocationSensor__LongitudePropertyDescriptions=The most recent available longitude value in degrees reported to 5 decimal places. If no value is available, 0 will be returned. Longitude is a value between 180 (east) and -180 (west), where 0 marks the Prime Meridian.
LogarithmCoefficientProperties=LogarithmCoefficient
LogarithmCoefficientPropertyDescriptions=The coefficient of the logarithmic term in the equation y \= a + b*ln(x).
LogarithmConstantProperties=LogarithmConstant
LogarithmConstantPropertyDescriptions=The constant term in the logarithmic equation y \= a + b*ln(x).
LongitudeProperties=Longitude
LoopProperties=Loop
LoopPropertyDescriptions=If true, the player will loop when it plays. Setting Loop while the player is playing will affect the current playing.
LuxProperties=Lux
LuxPropertyDescriptions=The most recent light level, in lux, if the sensor is available and enabled.
MagneticFieldSensor__AvailablePropertyDescriptions=Indicates that there is a magnetic field sensor in the device and it is available.
MagneticFieldSensor__EnabledPropertyDescriptions=Indicates whether or not the magnetic field sensor is enabled and working.
MagneticFieldSensor__MaximumRangePropertyDescriptions=Indicates the maximum range the magnetic sensor can reach.
MagnitudeProperties=Magnitude
MagnitudePropertyDescriptions=Returns a number between 0 and 1 indicating how much the device is tilted. It gives the magnitude of the force that would be felt by a ball rolling on the surface of the device. For the angle of tilt, use
MapTypeProperties=MapType
MapTypePropertyDescriptions=Set the type of map tile used for the base tile layer. Valid values are\: 1. Roads 2. Aerial 3. Terrain
Map__FeaturesPropertyDescriptions=The list of features placed on this Map. This list also includes any features created by calls to FeatureFromDescription
Map__HeightPercentPropertyDescriptions=Specifies the vertical height of the Map as a percentage of the height of the Screen.
Map__HeightPropertyDescriptions=Specifies the vertical height of the Map, measured in pixels.
Map__LatitudePropertyDescriptions=The latitude of the center of the map.
Map__LongitudePropertyDescriptions=The longitude of the center of the map.
Map__VisiblePropertyDescriptions=Specifies whether the Map should be visible on the screen. Value is true if the Map is showing and false if hidden.
Map__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Map as a percentage of the width of the Screen.
Map__WidthPropertyDescriptions=Specifies the horizontal width of the Map, measured in pixels.
Marker__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the Marker.
Marker__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the Marker by long-pressing and then dragging the Marker to a new location.
Marker__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the Marker.
Marker__FillColorPropertyDescriptions=The paint color used to fill in the Marker.
Marker__HeightPercentPropertyDescriptions=Specifies the `Marker`''s vertical height as a percentage of the [`Screen`''s `Height`](userinterface.html\#Screen.Height).
Marker__HeightPropertyDescriptions=Specifies the `Marker`''s vertical height, measured in pixels.
Marker__LatitudePropertyDescriptions=Sets or gets the latitude of the `Marker`, in degrees, with positive values representing north of the equator and negative values representing south of the equator. To update the `Latitude` and
Marker__LongitudePropertyDescriptions=Sets or gets the longitude of the `Marker`, in degrees, with positive values representing east of the prime meridian and negative values representing west of the prime meridian. To update the
Marker__StrokeColorPropertyDescriptions=The paint color used to outline the Marker.
Marker__StrokeWidthPropertyDescriptions=The width of the stroke used to outline the Marker.
Marker__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the Marker.
Marker__TypePropertyDescriptions=Returns the type of the feature. For Markers, this returns MapFeature.Marker ("Marker").
Marker__VisiblePropertyDescriptions=Specifies whether the Marker should be visible on the screen. Value is true if the component is showing and false if hidden.
Marker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the `Marker` as a percentage of the [`Screen`''s `Width`](userinterface.html\#Screen.Width).
Marker__WidthPropertyDescriptions=Specifies the horizontal width of the `Marker`, measured in pixels.
MaxValueProperties=MaxValue
MaxValuePropertyDescriptions=Sets the maximum value of slider. Changing the maximum value also resets Thumbposition to be halfway between the minimum and the (new) maximum. If the new maximum is less than the current minimum, then minimum and maximum will both be set to this value. Setting MaxValue resets the thumb position to halfway between MinValue and MaxValue and signals the PositionChanged event.
MaximumProperties=Maximum
MaximumPropertyDescriptions=Set the upper range of the progress bar max.
MaximumRangeProperties=MaximumRange
MediaStore__ServiceURLPropertyDescriptions=Returns the URL of the MediaStore web service.
MentionsProperties=Mentions
MentionsPropertyDescriptions=This property contains a list of mentions of the logged-in user. Initially, the list is empty. To set it, the program must\: <ol> <li> Call the <code>Authorize</code> method.</li> <li> Wait for the <code>IsAuthorized</code> event.</li> <li> Call the <code>RequestMentions</code> method.</li> <li> Wait for the <code>MentionsReceived</code> event.</li></ol>The value of this property will then be set to the list of mentions (and will maintain its value until any subsequent calls to <code>RequestMentions</code>).
MessageProperties=Message
MessagePropertyDescriptions=The message that will be sent when the SendMessage method is called.
MimeTypeProperties=MimeType
MimeTypePropertyDescriptions=Sets the desired MIME type for picking a file.
MinValueProperties=MinValue
MinValuePropertyDescriptions=Sets the minimum value of slider. Changing the minimum value also resets Thumbposition to be halfway between the (new) minimum and the maximum. If the new minimum is greater than the current maximum, then minimum and maximum will both be set to this value. Setting MinValue resets the thumb position to halfway between MinValue and MaxValue and signals the PositionChanged event.
MinimumIntervalProperties=MinimumInterval
MinimumProperties=Minimum
MinimumPropertyDescriptions=Set the lower range of the progress bar to min. This function works only for devices with API >\= 26
MinuteProperties=Minute
MinutePropertyDescriptions=The minute of the last time set using the time picker
ModeProperties=Mode
ModePropertyDescriptions=Specifies the mode of the sensor.
ModelProperties=Model
MonthInTextProperties=MonthInText
MonthInTextPropertyDescriptions=Returns the name of the Month that was last picked using the DatePicker, in textual format.
MonthProperties=Month
MonthPropertyDescriptions=the number of the Month that was last picked using the DatePicker. Note that months start in 1 \= January, 12 \= December.
MotorPortsProperties=MotorPorts
MotorPortsPropertyDescriptions=The motor ports that the motors are connected to. The ports are specified by a sequence of port letters.
MovingProperties=Moving
MovingPropertyDescriptions=This property has been deprecated.
MultiLineProperties=MultiLine
MultiLinePropertyDescriptions=If true, then this text box accepts multiple lines of input, which are entered using the return key. For single line text boxes there is a Done key instead of a return key, and pressing Done hides the keyboard. The app should call the HideKeyboard method to hide the keyboard for a mutiline text box.
NamespaceProperties=Namespace
NamespacePropertyDescriptions=Namespace for storing data.
Navigation__ApiKeyPropertyDescriptions=API Key for Open Route Service.
Navigation__LanguagePropertyDescriptions=The language to use for textual directions.
Navigation__ServiceURLPropertyDescriptions=Reserved for future use in case we decide to run our own service some day.
NoLocationNeededProperties=NoLocationNeeded
NoLocationNeededPropertyDescriptions=On Android 12 and later, indicates that Bluetooth is not used to determine the user''s location.
NorthLatitudeProperties=NorthLatitude
NorthLatitudePropertyDescriptions=The north edge of the rectangle, in decimal degrees north of the equator.
NotifierLengthProperties=NotifierLength
NotifierLengthPropertyDescriptions=Specifies the length of time that the alert is shown -- either "short" or "long".
Notifier__BackgroundColorPropertyDescriptions=Specifies the background color for alerts (not dialogs).
Notifier__TextColorPropertyDescriptions=Specifies the text color for alerts (not dialogs).
NumbersOnlyProperties=NumbersOnly
NxtColorSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the DetectColor property is set to False and the light level goes above the TopOfRange.
NxtColorSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the DetectColor property is set to False and the light level goes below the BottomOfRange.
NxtColorSensor__ColorChangedEventEnabledPropertyDescriptions=Whether the ColorChanged event should fire when the DetectColor property is set to True and the detected color changes.
NxtColorSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the DetectColor property is set to False and the light level goes between the BottomOfRange and the TopOfRange.
NxtDrive__StopBeforeDisconnectPropertyDescriptions=Whether to stop the drive motors before disconnecting.
NxtDrive__WheelDiameterPropertyDescriptions=The diameter of the wheels used for driving.
NxtLightSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the light level goes above the TopOfRange.
NxtLightSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the light level goes below the BottomOfRange.
NxtLightSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the light level goes between the BottomOfRange and the TopOfRange.
NxtSoundSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the sound level goes above the TopOfRange.
NxtSoundSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the sound level goes below the BottomOfRange.
NxtSoundSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the sound level goes between the BottomOfRange and the TopOfRange.
NxtTouchSensor__PressedEventEnabledPropertyDescriptions=Whether the Pressed event should fire when the touch sensor is pressed.
NxtUltrasonicSensor__AboveRangeEventEnabledPropertyDescriptions=Whether the AboveRange event should fire when the distance goes above the TopOfRange.
NxtUltrasonicSensor__BelowRangeEventEnabledPropertyDescriptions=Whether the BelowRange event should fire when the distance goes below the BottomOfRange.
NxtUltrasonicSensor__WithinRangeEventEnabledPropertyDescriptions=Whether the WithinRange event should fire when the distance goes between the BottomOfRange and the TopOfRange.
OnProperties=On
OnPropertyDescriptions=Returns true if the `Switch` is on.
OpenScreenAnimationProperties=OpenScreenAnimation
OpenScreenAnimationPropertyDescriptions=The animation for switching to another screen. Valid options are default, fade, zoom, slidehorizontal, slidevertical, and none
OrientationProperties=Orientation
OrientationPropertyDescriptions=Returns the style of the button.
OrientationSensor__AvailablePropertyDescriptions=Indicates whether the orientation sensor is present on the device.
OrientationSensor__EnabledPropertyDescriptions=Specifies whether the orientation sensor is enabled.
OrientationSensor__PitchPropertyDescriptions=Returns the pitch angle of the device. To return meaningful values the sensor must be enabled.
OriginAtCenterProperties=OriginAtCenter
OriginAtCenterPropertyDescriptions=Whether the x- and y-coordinates should represent the center of the Ball (true) or its left and top edges (false).
PaintColorProperties=PaintColor
PasswordTextBox__BackgroundColorPropertyDescriptions=The background color of the input box. You can choose a color by name in the Designer or in the Blocks Editor. The default background color is ''default'' (shaded 3-D look).
PasswordTextBox__EnabledPropertyDescriptions=Whether the user can enter text into the PasswordTextBox. By default, this is true.
PasswordTextBox__FontBoldPropertyDescriptions=Whether the font for the text should be bold. By default, it is not.
PasswordTextBox__FontItalicPropertyDescriptions=Whether the text should appear in italics. By default, it does not.
PasswordTextBox__FontSizePropertyDescriptions=The font size for the text. By default, it is 14.0 points.
PasswordTextBox__FontTypefacePropertyDescriptions=The font for the text. The value can be changed in the Designer.
PasswordTextBox__HeightPercentPropertyDescriptions=Specifies the vertical height of the PasswordTextBox as a percentage of the height of the Screen.
PasswordTextBox__HeightPropertyDescriptions=Specifies the vertical height of the PasswordTextBox, measured in pixels.
PasswordTextBox__HintColorPropertyDescriptions=Specifies the color of the hint of the PasswordTextBox.
PasswordTextBox__HintPropertyDescriptions=Text that should appear faintly in the PasswordTextBox to provide a hint as to what the user should enter. This can only be seen if the Text property is empty.
PasswordTextBox__NumbersOnlyPropertyDescriptions=If true, then this password text box accepts only numbers as keyboard input. Numbers can include a decimal point and an optional leading minus sign. This applies to keyboard input only. Even if NumbersOnly is true, you can use [set Text to] to enter any text at all.
PasswordTextBox__TextAlignmentPropertyDescriptions=Whether the text should be left justified, centered, or right justified. By default, text is left justified.
PasswordTextBox__TextColorPropertyDescriptions=The color for the text. You can choose a color by name in the Designer or in the Blocks Editor. The default text color is black.
PasswordTextBox__TextPropertyDescriptions=Returns the textbox contents.
PasswordTextBox__VisiblePropertyDescriptions=Specifies whether the PasswordTextBox should be visible on the screen. Value is true if the PasswordTextBox is showing and false if hidden.
PasswordTextBox__WidthPercentPropertyDescriptions=Specifies the horizontal width of the PasswordTextBox as a percentage of the width of the Screen.
PasswordTextBox__WidthPropertyDescriptions=Specifies the horizontal width of the PasswordTextBox, measured in pixels.
PasswordVisibleProperties=PasswordVisible
PasswordVisiblePropertyDescriptions=Visibility of password.
Pedometer__DistancePropertyDescriptions=The approximate distance traveled in meters.
PersistProperties=Persist
PersistPropertyDescriptions=If true, variables will retain their values when off-line and the App exits. Values will be uploaded to Firebase the next time the App is run while connected to the network. This is useful for applications which will gather data while not connected to the network. Note\: AppendValue and RemoveFirst will not work correctly when off-line, they require a network connection.<br/><br/> <i>Note</i>\: If you set Persist on any Firebase component, on any screen, it makes all Firebase components on all screens persistent. This is a limitation of the low level Firebase library. Also be aware that if you want to set persist to true, you should do so before connecting the Companion for incremental development.
PhoneCall__PhoneNumberPropertyDescriptions=PhoneNumber property getter method.
PhoneNumberListProperties=PhoneNumberList
PhoneNumberListPropertyDescriptions=Returns a list of phone numbers associated with the selected contact.
PhoneNumberPicker__BackgroundColorPropertyDescriptions=Returns the button''s background color
PhoneNumberPicker__EnabledPropertyDescriptions=If set, user can tap ContactPicker to cause action.
PhoneNumberPicker__FontBoldPropertyDescriptions=If set, ContactPicker text is displayed in bold.
PhoneNumberPicker__FontItalicPropertyDescriptions=If set, ContactPicker text is displayed in italics.
PhoneNumberPicker__FontSizePropertyDescriptions=Point size for ContactPicker text.
PhoneNumberPicker__FontTypefacePropertyDescriptions=Font family for ContactPicker text.
PhoneNumberPicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the ContactPicker as a percentage of the height of the Screen.
PhoneNumberPicker__HeightPropertyDescriptions=Specifies the vertical height of the ContactPicker, measured in pixels.
PhoneNumberPicker__ImagePropertyDescriptions=Image to display on button.
PhoneNumberPicker__PhoneNumberPropertyDescriptions=Returns the primary phone number associated with the selected contact, or the empty string if no phone number is associated with the contact.
PhoneNumberPicker__PicturePropertyDescriptions=Returns a picture URI for the selected contact, which can be used to retrieve the contact''s photo and other fields.
PhoneNumberPicker__ShapePropertyDescriptions=Returns the style of the `ContactPicker`.
PhoneNumberPicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a ContactPicker that has an image as background.
PhoneNumberPicker__TextAlignmentPropertyDescriptions=Left, center, or right.
PhoneNumberPicker__TextColorPropertyDescriptions=Color for button text.
PhoneNumberPicker__TextPropertyDescriptions=Text to display on ContactPicker.
PhoneNumberPicker__VisiblePropertyDescriptions=Specifies whether the ContactPicker should be visible on the screen. Value is true if the ContactPicker is showing and false if hidden.
PhoneNumberPicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the ContactPicker as a percentage of the width of the Screen.
PhoneNumberPicker__WidthPropertyDescriptions=Specifies the horizontal width of the ContactPicker, measured in pixels.
PhoneNumberProperties=PhoneNumber
PictureProperties=Picture
PieRadiusProperties=PieRadius
PieRadiusPropertyDescriptions=Sets the Pie Radius of a Pie Chart from 0% to 100%, where the percentage indicates the percentage of the hole fill. 100% means that a full Pie Chart is drawn, while values closer to 0% correspond to hollow Pie Charts.
PitchProperties=Pitch
PlatformProperties=Platform
PlatformPropertyDescriptions=The platform the app is running on, for example "Android" or "iOS".
PlatformVersionProperties=PlatformVersion
PlatformVersionPropertyDescriptions=The dotted version number of the platform, such as 4.2.2 or 10.0. This is platform specific and there is no guarantee that it has a particular format.
PlayOnlyInForegroundProperties=PlayOnlyInForeground
PlayOnlyInForegroundPropertyDescriptions=If true, the player will pause playing when leaving the current screen; if false (default option), the player continues playing whenever the current screen is displaying or not.
Player__SourcePropertyDescriptions=Returns the path to the audio source
Player__VolumePropertyDescriptions=Sets the volume to a number between 0 and 100
PlayersProperties=Players
PlayersPropertyDescriptions=The current set of players for this game instance. Each player is designated by an email address, which is a string. The list of players is updated each time a successful communication is made with the game server.
PointShapeProperties=PointShape
PointShapePropertyDescriptions=Changes the Point Shape of the Data Series, provided that the Data component is attached to a Chart that has the type set to the Scatter Chart. Valid types include circle, square, triangle, cross, x.
PointsFromStringProperties=PointsFromString
PointsProperties=Points
PollingRateProperties=PollingRate
PollingRatePropertyDescriptions=The polling rate in milliseconds when the Bluetooth Client is used as a Data Source in a Chart Data component. The minimum value is 1.
Polygon__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the Polygon.
Polygon__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the Polygon by long-pressing and then dragging the Polygon to a new location.
Polygon__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the Polygon.
Polygon__FillColorPropertyDescriptions=The paint color used to fill in the Polygon.
Polygon__PointsFromStringPropertyDescriptions=Constructs a polygon from the given list of coordinates.
Polygon__PointsPropertyDescriptions=Specifies the Points used for drawing the `Polygon`. The Points are specified as a list of lists containing latitude and longitude values, such as `[[lat1, long1], [lat2, long2], ...]`.
Polygon__StrokeColorPropertyDescriptions=The paint color used to outline the Polygon.
Polygon__StrokeWidthPropertyDescriptions=The width of the stroke used to outline the Polygon.
Polygon__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the Polygon.
Polygon__TypePropertyDescriptions=Returns the type of the feature. For polygons, this returns MapFeature.Polygon ("Polygon").
Polygon__VisiblePropertyDescriptions=Specifies whether the Polygon should be visible on the screen. Value is true if the component is showing and false if hidden.
PredictionsProperties=Predictions
PredictionsPropertyDescriptions=The predictions for the trendline.
PressedEventEnabledProperties=PressedEventEnabled
PrimaryColorDarkProperties=PrimaryColorDark
PrimaryColorDarkPropertyDescriptions=This is the primary color used for darker elements in Material UI.
PrimaryColorProperties=PrimaryColor
PrimaryColorPropertyDescriptions=This is the primary color used for Material UI elements, such as the ActionBar.
ProgressColorProperties=ProgressColor
ProgressColorPropertyDescriptions=Change the progress color of the progress bar.
ProgressProperties=Progress
ProgressPropertyDescriptions=Sets the current progress to the specified value. Does not do anything if the progress bar is in indeterminate mode.
ProjectBucketProperties=ProjectBucket
ProjectBucketPropertyDescriptions=Sets the ProjectBucket for this FirebaseDB.
ProjectIDProperties=ProjectID
ProjectIDPropertyDescriptions=Gets the ProjectID for this CloudDB project.
PromptProperties=Prompt
PromptPropertyDescriptions=Text with the current title for the Spinner window
PromptforPermissionProperties=PromptforPermission
PromptforPermissionPropertyDescriptions=If True, then prompt the user of the WebView to give permission to access the geolocation API. If False, then assume permission is granted.
ProviderLockedProperties=ProviderLocked
ProviderLockedPropertyDescriptions=The device will not change the service provider. It is possible for a device to switch service providers when the current provider is unable to provide adequate location information. `ProviderLocked` is a Boolean value\: true/false. Set to `true
ProviderNameProperties=ProviderName
ProviderNamePropertyDescriptions=Indicates the source of the location information. If there is no provider, the string "NO PROVIDER" is returned. This is useful primarily for debugging.
ProviderProperties=Provider
ProviderPropertyDescriptions=Set the name of the provider to use. See https\://appinv.us/chatbot for the current list of supported providers.
ProximityChangedPropertiesProperties=ProximityChangedProperties
ProximitySensor__AvailablePropertyDescriptions=Reports whether or not the device has a proximity sensor.
ProximitySensor__DistancePropertyDescriptions=Returns the distance from the object to the device
ProximitySensor__EnabledPropertyDescriptions=If true, the sensor will generate events. Otherwise, no events are generated.
ProximitySensor__MaximumRangePropertyDescriptions=Reports the Maximum Range of the device''s ProximitySensor
PublicInstancesProperties=PublicInstances
PublicInstancesPropertyDescriptions=The set of game instances that have been marked public. To ensure current values are returned, first invoke
QuadraticCoefficientProperties=QuadraticCoefficient
QuadraticCoefficientPropertyDescriptions=The coefficient of the quadratic term in the trendline, if any.
QueryProperties=Query
QueryPropertyDescriptions=The query to send to the Fusion Tables API. <p>For legal query formats and examples, see the <a href\="https\://developers.google.com/fusiontables/docs/v2/getting_started" target\="_blank">Fusion Tables API v2.0 reference manual</a>.</p> <p>Note that you do not need to worry about UTF-encoding the query. But you do need to make sure it follows the syntax described in the reference manual, which means that things like capitalization for names of columns matters, and that single quotes need to be used around column names if there are spaces in them.</p>
RSquaredProperties=RSquared
RSquaredPropertyDescriptions=The r-squared coefficient of determination for the trendline.
RadiusProperties=Radius
ReadModeProperties=ReadMode
ReadModePropertyDescriptions=Returns true if in read mode, false if in write mode.
ReadOnlyProperties=ReadOnly
ReadOnlyPropertyDescriptions=Whether the TextBox is read-only. By default, this is false.
ReadPermissionProperties=ReadPermission
ReadPermissionPropertyDescriptions=A designer-only property that can be used to enable read access to file storage outside of the app-specific directories.
ReceivingEnabledProperties=ReceivingEnabled
ReceivingEnabledPropertyDescriptions=If set to 1 (OFF) no messages will be received. If set to 2 (FOREGROUND) or3 (ALWAYS) the component will respond to messages if it is running. If the app is not running then the message will be discarded if set to 2 (FOREGROUND). If set to 3 (ALWAYS) and the app is not running the phone will show a notification. Selecting the notification will bring up the app and signal the MessageReceived event. Messages received when the app is dormant will be queued, and so several MessageReceived events might appear when the app awakens. As an app developer, it would be a good idea to give your users control over this property, so they can make their phones ignore text messages when your app is installed.
Rectangle__DescriptionPropertyDescriptions=The description displayed in the info window that appears when the user clicks on the Rectangle.
Rectangle__DraggablePropertyDescriptions=The Draggable property is used to set whether or not the user can drag the Rectangle by long-pressing and then dragging the Rectangle to a new location.
Rectangle__EnableInfoboxPropertyDescriptions=Enable or disable the infobox window display when the user taps the Rectangle.
Rectangle__FillColorPropertyDescriptions=The paint color used to fill in the Rectangle.
Rectangle__StrokeColorPropertyDescriptions=The paint color used to outline the Rectangle.
Rectangle__StrokeWidthPropertyDescriptions=The width of the stroke used to outline the Rectangle.
Rectangle__TitlePropertyDescriptions=The title displayed in the info window that appears when the user clicks on the Rectangle.
Rectangle__TypePropertyDescriptions=Returns the type of the feature. For rectangles, this returns MapFeature.Rectangle ("Rectangle").
Rectangle__VisiblePropertyDescriptions=Specifies whether the Rectangle should be visible on the screen. Value is true if the component is showing and false if hidden.
RedisPortProperties=RedisPort
RedisPortPropertyDescriptions=The Redis Server port to use. Defaults to 6381
RedisServerProperties=RedisServer
RedisServerPropertyDescriptions=The Redis Server to use to store data. A setting of "DEFAULT" means that the MIT server will be used.
RefreshTimeProperties=RefreshTime
RefreshTimePropertyDescriptions=The requested minimum time in milliseconds between changes in readings being reported. Android is not guaranteed to honor the request. Setting this property has no effect on pre-Gingerbread devices.
ReleasedEventEnabledProperties=ReleasedEventEnabled
ReleasedEventEnabledPropertyDescriptions=Whether the Released event should fire when the touch sensor is released.
RequestHeadersProperties=RequestHeaders
RequestHeadersPropertyDescriptions=The request headers, as a list of two-element sublists. The first element of each sublist represents the request header field name. The second element of each sublist represents the request header field values, either a single value or a list containing multiple values.
ResponseContentProperties=ResponseContent
ResponseContentPropertyDescriptions=Content of the last response as a dictionary.
ResponseFileNameProperties=ResponseFileName
ResponseFileNamePropertyDescriptions=The name of the file where the response should be saved. If SaveResponse is true and ResponseFileName is empty, then a new file name will be generated.
ResponseTextEncodingProperties=ResponseTextEncoding
ResponseTextEncodingPropertyDescriptions=User-specified character encoding for web response.
ResultNameProperties=ResultName
ResultNamePropertyDescriptions=Returns the name that will be used to retrieve a result from the activity.
ResultProperties=Result
ResultTypeProperties=ResultType
ResultTypePropertyDescriptions=Returns the MIME type from the activity.
ResultUriProperties=ResultUri
ResultUriPropertyDescriptions=Returns the URI from the activity.
ResultsProperties=Results
ResultsPropertyDescriptions=Obtain a copy of the most recent values computed by the line of best fit.
ReverseDirectionProperties=ReverseDirection
ReverseDirectionPropertyDescriptions=Set whether the direction of motors is reversed or not.
RollProperties=Roll
RollPropertyDescriptions=Returns the roll angle of the device. To return meaningful values the sensor must be enabled.
RotatesProperties=Rotates
RotatesPropertyDescriptions=Whether the image should rotate to match the ImageSprite''s heading. The sprite rotates around its centerpoint.
RotationAngleProperties=RotationAngle
RotationAnglePropertyDescriptions=Specifies the angle, in degrees, at which the image picture appears rotated.
RotationProperties=Rotation
RotationPropertyDescriptions=Sets or gets the rotation of the map in decimal degrees if any
RowPropertyDescriptions=Row property getter method.
RowsProperties=Rows
SaveResponseProperties=SaveResponse
SaveResponsePropertyDescriptions=Whether the response should be saved in a file.
SavedRecordingProperties=SavedRecording
SavedRecordingPropertyDescriptions=Specifies the path to the file where the recording should be stored. If this property is the empty string, then starting a recording will create a file in an appropriate location. If the property is not the empty string, it should specify a complete path to a file in an existing directory, including a file name with the extension .3gp.
ScalePictureToFitProperties=ScalePictureToFit
ScalePictureToFitPropertyDescriptions=Specifies whether the image should be resized to match the size of the ImageView.
ScaleUnitsProperties=ScaleUnits
ScaleUnitsPropertyDescriptions=Specifies the units used for the scale overlay. 1 (the default) will give metric units (km, m) whereas 2 will give imperial units (mi, ft).
ScalingProperties=Scaling
ScalingPropertyDescriptions=This property determines how the picture scales according to the Height or Width of the Image. Scale proportionally (0) preserves the picture aspect ratio. Scale to fit (1) matches the Image area, even if the aspect ratio changes.
ScopeProperties=Scope
ScopePropertyDescriptions=Indicates the current scope for operations such as ReadFrom and SaveFile.
ScreenOrientationProperties=ScreenOrientation
ScreenOrientationPropertyDescriptions=The requested screen orientation, specified as a text value. Commonly used values are landscape, portrait, sensor, user and unspecified. See the Android developer documentation for ActivityInfo.Screen_Orientation for the complete list of possible settings.
Screen__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the screen are aligned horizontally. The choices are\: 1 \= left aligned, 3 \= horizontally centered, 2 \= right aligned.
Screen__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the arrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Vertical alignment has no effect if the screen is scrollable.
Screen__BackgroundColorPropertyDescriptions=BackgroundColor property getter method.
Screen__BackgroundImagePropertyDescriptions=The screen background image.
Screen__HeightPropertyDescriptions=Screen height (y-size).
Screen__TitlePropertyDescriptions=The caption for the form, which apears in the title bar
Screen__WidthPropertyDescriptions=Screen width (x-size).
ScrollableProperties=Scrollable
ScrollablePropertyDescriptions=When checked, there will be a vertical scrollbar on the screen, and the height of the application can exceed the physical height of the device. When unchecked, the application height is constrained to the height of the device.
SearchResultsProperties=SearchResults
SearchResultsPropertyDescriptions=This property, which is initially empty, is set to a list of search results after the program\: <ol><li>Calls the <code>SearchTwitter</code> method.</li> <li>Waits for the <code>SearchSuccessful</code> event.</li></ol>The value of the property will then be the same as the parameter to <code>SearchSuccessful</code>. Note that it is not necessary to call the <code>Authorize</code> method before calling <code>SearchTwitter</code>.
SecureProperties=Secure
SecurePropertyDescriptions=Whether to invoke SSP (Simple Secure Pairing), which is supported on devices with Bluetooth v2.1 or higher. When working with embedded Bluetooth devices, this property may need to be set to False. For Android 2.0-2.2, this property setting will be ignored.
SelectionColorProperties=SelectionColor
SelectionColorPropertyDescriptions=The color of the item when it is selected.
SelectionDetailTextProperties=SelectionDetailText
SelectionDetailTextPropertyDescriptions=Returns the secondary text of the selected row in the ListView.
SelectionIndexProperties=SelectionIndex
SelectionProperties=Selection
SensitivityProperties=Sensitivity
SensitivityPropertyDescriptions=A number that encodes how sensitive the accelerometer is. The choices are\: 1 \= weak, 2 \= moderate, 3 \= strong.
SensorPortProperties=SensorPort
SensorPortPropertyDescriptions=The sensor port that the sensor is connected to.
SensorValueChangedEventEnabledProperties=SensorValueChangedEventEnabled
SensorValueChangedEventEnabledPropertyDescriptions=Whether the SensorValueChanged event should fire when the sensor value changed.
ServiceAccountEmailProperties=ServiceAccountEmail
ServiceAccountEmailPropertyDescriptions=The Service Account Email Address when service account authentication is in use.
ServiceURLProperties=ServiceURL
ServiceUrlProperties=ServiceUrl
ServiceUrlPropertyDescriptions=The URL of the game server.
ShapeProperties=Shape
ShowCompassProperties=ShowCompass
ShowCompassPropertyDescriptions=Show a compass on the map. If the device provides a digital compass, orientation changes will be used to rotate the compass icon.
ShowFeedbackProperties=ShowFeedback
ShowFilterBarProperties=ShowFilterBar
ShowListsAsJsonProperties=ShowListsAsJson
ShowListsAsJsonPropertyDescriptions=If false, lists will be converted to strings using Lisp notation, i.e., as symbols separated by spaces, e.g., (a 1 b2 (c d). If true, lists will appear as in Json or Python, e.g. ["a", 1, "b", 2, ["c", "d"]]. This property appears only in Screen 1, and the value for Screen 1 determines the behavior for all screens. The property defaults to "true" meaning that the App Inventor programmer must explicitly set it to "false" if Lisp syntax is desired. In older versions of App Inventor, this setting defaulted to false. Older projects should not have been affected by this default settings update.
ShowLoadingDialogProperties=ShowLoadingDialog
ShowLoadingDialogPropertyDescriptions=Setter for the loading dialog''s visibility.
ShowScaleProperties=ShowScale
ShowScalePropertyDescriptions=Shows or hides a scale overlay on the
ShowShadowPropertyDescriptions=Gets whether or not the shadow of the Marker is shown.
ShowStatusBarProperties=ShowStatusBar
ShowStatusBarPropertyDescriptions=The status bar is the topmost bar on the screen. This property reports whether the status bar is visible.
ShowUserProperties=ShowUser
ShowUserPropertyDescriptions=Shows or hides an icon indicating the user''s current location on the
ShowZoomProperties=ShowZoom
ShowZoomPropertyDescriptions=Specifies whether to show zoom controls or not.
SimpleStepsProperties=SimpleSteps
SimpleStepsPropertyDescriptions=The number of simple steps taken since the pedometer has started.
SizeProperties=Size
SizePropertyDescriptions=Specifies the size of the generated image. Can be one of 256, 512, or 1024.
SizingProperties=Sizing
SizingPropertyDescriptions=If set to fixed, screen layouts will be created for a single fixed-size screen and autoscaled. If set to responsive, screen layouts will use the actual resolution of the device. See the documentation on responsive design in App Inventor for more information. This property appears on Screen1 only and controls the sizing for all screens in the app.
Slider__HeightPercentPropertyDescriptions=Specifies the vertical height of the Slider as a percentage of the height of the Screen.
Slider__VisiblePropertyDescriptions=Specifies whether the Slider should be visible on the screen. Value is true if the Slider is showing and false if hidden.
Slider__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Slider as a percentage of the width of the Screen.
Slider__WidthPropertyDescriptions=Specifies the horizontal width of the Slider, measured in pixels.
Sound__MinimumIntervalPropertyDescriptions=The minimum interval, in milliseconds, between sounds. If you play a sound, all further Play() calls will be ignored until the interval has elapsed.
Sound__SourcePropertyDescriptions=The name of the sound file. Only certain formats are supported. See http\://developer.android.com/guide/appendix/media-formats.html.
SourceFileProperties=SourceFile
SourceFilePropertyDescriptions=Sets the source file to parse data from, and then parses the file asynchronously. The results are stored in the
SourceProperties=Source
SouthLatitudeProperties=SouthLatitude
SouthLatitudePropertyDescriptions=The south edge of the rectangle, in decimal degrees north of the equator.
SpeechRateProperties=SpeechRate
SpeechRatePropertyDescriptions=Sets the SpeechRate for TextToSpeech. The values should be between 0 and 2 where lower values slow down the pitch and greater values accelerate it.
SpeechRecognizer__LanguagePropertyDescriptions=Suggests the language to use for recognizing speech. An empty string (the default) will use the system''s default language. Language is specified using a [language tag](https\://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) with an optional region suffix, such as en or es-MX. The set of supported languages will vary by device.
SpeechRecognizer__ResultPropertyDescriptions=Returns the last text produced by the recognizer.
SpeedProperties=Speed
Spinner__ElementsFromStringPropertyDescriptions=Sets the Spinner list to the elements passed in the comma-separated string
Spinner__ElementsPropertyDescriptions=returns a list of text elements to be picked from.
Spinner__HeightPercentPropertyDescriptions=Specifies the vertical height of the Spinner as a percentage of the height of the Screen.
Spinner__HeightPropertyDescriptions=Specifies the vertical height of the Spinner, measured in pixels.
Spinner__SelectionIndexPropertyDescriptions=The index of the currently selected item, starting at 1. If no item is selected, the value will be 0.
Spinner__SelectionPropertyDescriptions=Returns the current selected item in the spinner
Spinner__VisiblePropertyDescriptions=Specifies whether the Spinner should be visible on the screen. Value is true if the Spinner is showing and false if hidden.
Spinner__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Spinner as a percentage of the width of the Screen.
Spinner__WidthPropertyDescriptions=Specifies the horizontal width of the Spinner, measured in pixels.
SpreadsheetIDProperties=SpreadsheetID
SpreadsheetIDPropertyDescriptions=The ID for the Google Sheets file you want to edit. You can find the spreadsheetID in the URL of the Google Sheets file.
SpreadsheetUseHeadersProperties=SpreadsheetUseHeaders
SpreadsheetUseHeadersPropertyDescriptions=If checked, the first row of the spreadsheet will be used to interpret the x and y column values. Otherwise, the x and y columns should be a column reference, such as A or B.
SpreadsheetXColumnProperties=SpreadsheetXColumn
SpreadsheetXColumnPropertyDescriptions=Sets the column to parse from the attached Spreadsheet component for the x values. If a column is not specified, default values for the x values will be generated instead.
SpreadsheetYColumnProperties=SpreadsheetYColumn
SpreadsheetYColumnPropertyDescriptions=Sets the column to parse from the attached Spreadsheet component for the y values. If a column is not specified, default values for the y values will be generated instead.
StartLatitudeProperties=StartLatitude
StartLatitudePropertyDescriptions=The latitude of the start location.
StartLocationProperties=StartLocation
StartLocationPropertyDescriptions=Set the start location.
StartLongitudeProperties=StartLongitude
StartLongitudePropertyDescriptions=The longitude of the start location.
StopBeforeDisconnectProperties=StopBeforeDisconnect
StopDetectionTimeoutProperties=StopDetectionTimeout
StopDetectionTimeoutPropertyDescriptions=The duration in milliseconds of idleness (no steps detected) after which to go into a "stopped" state
StrideLengthProperties=StrideLength
StrideLengthPropertyDescriptions=Set the average stride length in meters.
StrokeColorProperties=StrokeColor
StrokeOpacityProperties=StrokeOpacity
StrokeOpacityPropertyDescriptions=The opacity of the stroke used to outline the map feature.
StrokeStyleProperties=StrokeStyle
StrokeStylePropertyDescriptions=The style of the best fit line.
StrokeWidthProperties=StrokeWidth
Switch__BackgroundColorPropertyDescriptions=The background color of the Switch as an alpha-red-green-blue integer.
Switch__EnabledPropertyDescriptions=True if the Switch is active and clickable.
Switch__FontBoldPropertyDescriptions=Set to true if the text of the Switch should be bold.
Switch__FontItalicPropertyDescriptions=Set to true if the text of the Switch should be italic.
Switch__FontSizePropertyDescriptions=Specifies the text font size of the Switch in scale-independent pixels.
Switch__FontTypefacePropertyDescriptions=Specifies the text font face of the Switch.
Switch__HeightPercentPropertyDescriptions=Specifies the vertical height of the Switch as a percentage of the height of the Screen.
Switch__HeightPropertyDescriptions=Specifies the vertical height of the Switch, measured in pixels.
Switch__TextColorPropertyDescriptions=Specifies the text color of the Switch as an alpha-red-green-blue integer.
Switch__TextPropertyDescriptions=Specifies the text displayed by the Switch.
Switch__VisiblePropertyDescriptions=Specifies whether the Switch should be visible on the screen. Value is true if the Switch is showing and false if hidden.
Switch__WidthPercentPropertyDescriptions=Specifies the horizontal width of the Switch as a percentage of the width of the Screen.
Switch__WidthPropertyDescriptions=Specifies the horizontal width of the Switch, measured in pixels.
SystemProperties=System
SystemPropertyDescriptions=The "System" value given to ChatGPT. It is used to set the tone of a conversation. For example\: "You are a funny person."
TableArrangement__ColumnsPropertyDescriptions=Columns property getter method.
TableArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the TableArrangement as a percentage of the height of the Screen.
TableArrangement__HeightPropertyDescriptions=Specifies the vertical height of the TableArrangement, measured in pixels.
TableArrangement__RowsPropertyDescriptions=Rows property getter method.
TableArrangement__VisiblePropertyDescriptions=Specifies whether the TableArrangement should be visible on the screen. Value is true if the TableArrangement is showing and false if hidden.
TableArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the TableArrangement as a percentage of the width of the Screen.
TableArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the TableArrangement, measured in pixels.
TachoCountChangedEventEnabledProperties=TachoCountChangedEventEnabled
TachoCountChangedEventEnabledPropertyDescriptions=Whether the TachoCountChanged event should fire when the angle is changed.
TapThresholdProperties=TapThreshold
TapThresholdPropertyDescriptions=Set the number of pixels right, left, up or down, a sequence of drags mustmove from the starting point to be considered a drag (instead of a touch).
TemperatureProperties=Temperature
TemperaturePropertyDescriptions=The temperature in degrees Celsius, if the sensor is available and enabled
TextAlignmentProperties=TextAlignment
TextBox__BackgroundColorPropertyDescriptions=The background color of the input box. You can choose a color by name in the Designer or in the Blocks Editor. The default background color is ''default'' (shaded 3-D look).
TextBox__EnabledPropertyDescriptions=Whether the user can enter text into the TextBox. By default, this is true.
TextBox__FontBoldPropertyDescriptions=Whether the font for the text should be bold. By default, it is not.
TextBox__FontItalicPropertyDescriptions=Whether the text should appear in italics. By default, it does not.
TextBox__FontSizePropertyDescriptions=The font size for the text. By default, it is 14.0 points.
TextBox__FontTypefacePropertyDescriptions=The font for the text. The value can be changed in the Designer.
TextBox__HeightPercentPropertyDescriptions=Specifies the vertical height of the TextBox as a percentage of the height of the Screen.
TextBox__HeightPropertyDescriptions=Specifies the vertical height of the TextBox, measured in pixels.
TextBox__HintColorPropertyDescriptions=Specifies the color of the hint of the TextBox.
TextBox__HintPropertyDescriptions=Text that should appear faintly in the TextBox to provide a hint as to what the user should enter. This can only be seen if the Text property is empty.
TextBox__NumbersOnlyPropertyDescriptions=If true, then this text box accepts only numbers as keyboard input. Numbers can include a decimal point and an optional leading minus sign. This applies to keyboard input only. Even if NumbersOnly is true, you can use [set Text to] to enter any text at all.
TextBox__TextAlignmentPropertyDescriptions=Whether the text should be left justified, centered, or right justified. By default, text is left justified.
TextBox__TextColorPropertyDescriptions=The color for the text. You can choose a color by name in the Designer or in the Blocks Editor. The default text color is black.
TextBox__TextPropertyDescriptions=Returns the textbox contents.
TextBox__VisiblePropertyDescriptions=Specifies whether the TextBox should be visible on the screen. Value is true if the TextBox is showing and false if hidden.
TextBox__WidthPercentPropertyDescriptions=Specifies the horizontal width of the TextBox as a percentage of the width of the Screen.
TextBox__WidthPropertyDescriptions=Specifies the horizontal width of the TextBox, measured in pixels.
TextColorDetailProperties=TextColorDetail
TextColorDetailPropertyDescriptions=The text color of DetailText of listview stringItems.
TextColorProperties=TextColor
TextProperties=Text
TextSizeProperties=TextSize
TextSizePropertyDescriptions=The text size of the listview items.
TextToSpeech__LanguagePropertyDescriptions=Sets the language for TextToSpeech. This changes the way that words are pronounced, not the actual language that is spoken. For example setting the language to and speaking English text with sound like someone speaking English with a French accent.
TextToSpeech__PitchPropertyDescriptions=Sets the Pitch for TextToSpeech The values should be between 0 and 2 where lower values lower the tone of synthesized voice and greater values raise it.
TextToSpeech__ResultPropertyDescriptions=Returns `true
TextToWriteProperties=TextToWrite
TextToWritePropertyDescriptions=Returns the content of the text that''s going to be written to the tag.
Texting__PhoneNumberPropertyDescriptions=Sets the phone number to send the text message to when the SendMessage function is called.
ThemeProperties=Theme
ThemePropertyDescriptions=Pick a design theme for your app. Themes change the appearance of an app, such as how buttons and text look. The most common themes are\: </p> <ul> <li> <code>Classic</code>\: This theme stays consistent whether you are looking at an Android, iOS, or the screen layout in App Inventor’s designer. Choose Classic if you want detailed control of the appearance of your app. </li><li> <code>Device Default</code>\: This theme makes your app resemble the other apps on your device. With the default theme, however, your app won’t look consistent across Android, iOS, and App Inventor’s designer. The best way to see the true appearance of your app is to view it using the Companion.
Thermometer__AvailablePropertyDescriptions=Specifies whether or not the device has the hardware to support the Thermometer component.
Thermometer__EnabledPropertyDescriptions=If enabled, then device will listen for changes.
ThumbColorActiveProperties=ThumbColorActive
ThumbColorActivePropertyDescriptions=Returns the `Switch`''s thumb color (button that toggles back and forth) when the switch is ON/Checked
ThumbColorInactiveProperties=ThumbColorInactive
ThumbColorInactivePropertyDescriptions=Returns the `Switch`''s thumb color (button that toggles back and forth) when the switch is Off/Unchecked
ThumbEnabledProperties=ThumbEnabled
ThumbEnabledPropertyDescriptions=Sets whether or not to display the slider thumb.
ThumbPositionProperties=ThumbPosition
ThumbPositionPropertyDescriptions=Sets the position of the slider thumb. If this value is greater than MaxValue, then it will be set to same value as MaxValue. If this value is less than MinValue, then it will be set to same value as MinValue.
TimeIntervalProperties=TimeInterval
TimeIntervalPropertyDescriptions=Determines the minimum time interval, in milliseconds, that the sensor will try to use for sending out location updates. However, location updates will only be received when the location of the phone actually changes, and use of the specified time interval is not guaranteed. For example, if 1000 is used as the time interval, location updates will never be fired sooner than 1000ms, but they may be fired anytime after.
TimePicker__BackgroundColorPropertyDescriptions=Returns the button''s background color
TimePicker__EnabledPropertyDescriptions=If set, user can tap TimePicker to cause action.
TimePicker__FontBoldPropertyDescriptions=If set, TimePicker text is displayed in bold.
TimePicker__FontItalicPropertyDescriptions=If set, TimePicker text is displayed in italics.
TimePicker__FontSizePropertyDescriptions=Point size for TimePicker text.
TimePicker__FontTypefacePropertyDescriptions=Font family for TimePicker text.
TimePicker__HeightPercentPropertyDescriptions=Specifies the vertical height of the TimePicker as a percentage of the height of the Screen.
TimePicker__HeightPropertyDescriptions=Specifies the vertical height of the TimePicker, measured in pixels.
TimePicker__ImagePropertyDescriptions=Image to display on button.
TimePicker__InstantPropertyDescriptions=The instant of the last time set using the time picker
TimePicker__ShapePropertyDescriptions=Returns the style of the `TimePicker`.
TimePicker__ShowFeedbackPropertyDescriptions=Specifies if a visual feedback should be shown for a TimePicker that has an image as background.
TimePicker__TextAlignmentPropertyDescriptions=Left, center, or right.
TimePicker__TextColorPropertyDescriptions=Color for button text.
TimePicker__TextPropertyDescriptions=Text to display on TimePicker.
TimePicker__VisiblePropertyDescriptions=Specifies whether the TimePicker should be visible on the screen. Value is true if the TimePicker is showing and false if hidden.
TimePicker__WidthPercentPropertyDescriptions=Specifies the horizontal width of the TimePicker as a percentage of the width of the Screen.
TimePicker__WidthPropertyDescriptions=Specifies the horizontal width of the TimePicker, measured in pixels.
TimeoutProperties=Timeout
TimeoutPropertyDescriptions=The number of milliseconds that a web request will wait for a response before giving up. If set to 0, then there is no time limit on how long the request will wait.
TimerAlwaysFiresProperties=TimerAlwaysFires
TimerAlwaysFiresPropertyDescriptions=Will fire even when application is not showing on the screen if true
TimerEnabledProperties=TimerEnabled
TimerEnabledPropertyDescriptions=Fires timer if true
TimerIntervalProperties=TimerInterval
TimerIntervalPropertyDescriptions=Interval between timer events in ms
TinyWebDB__ServiceURLPropertyDescriptions=The URL of the web service database.
TitleProperties=Title
TitleVisibleProperties=TitleVisible
TitleVisiblePropertyDescriptions=The title bar is the top gray bar on the screen. This property reports whether the title bar is visible.
TokenProperties=Token
TopOfRangeProperties=TopOfRange
TopOfRangePropertyDescriptions=The top of the range used for the BelowRange, WithinRange, and AboveRange events.
TrackColorActiveProperties=TrackColorActive
TrackColorActivePropertyDescriptions=Returns the `Switch`''s track color
TrackColorInactiveProperties=TrackColorInactive
TrackColorInactivePropertyDescriptions=Color of the toggle track when switched off
Translator__ApiKeyPropertyDescriptions=The API Key to use. MIT App Inventor will automatically fill this value in. You should not need to change it.
TransportationMethodProperties=TransportationMethod
TransportationMethodPropertyDescriptions=The transportation method used for determining the route.
Trendline__ColorPropertyDescriptions=The color of the line of best fit.
Trendline__ModelPropertyDescriptions=The model to use for the line of best fit.
Trendline__StrokeWidthPropertyDescriptions=The width of the best fit line.
Trendline__VisiblePropertyDescriptions=Whether the line of best fit is visible.
TutorialURLProperties=TutorialURL
TutorialURLPropertyDescriptions=A URL to use to populate the Tutorial Sidebar while editing a project. Used as a teaching aid.
TwitPic_API_KeyProperties=TwitPic_API_Key
TwitPic_API_KeyPropertyDescriptions=TwitPicAPIkey property getter method.
TypeProperties=Type
UnitProperties=Unit
UnitPropertyDescriptions=Specifies the unit of distance.
UrlProperties=Url
UrlPropertyDescriptions=The URL for the web request.
UseExternalScannerProperties=UseExternalScanner
UseExternalScannerPropertyDescriptions=If true App Inventor will look for and use an external scanning program such as "Bar Code Scanner."
UseFrontProperties=UseFront
UseFrontPropertyDescriptions=Returns true if the front-facing camera is to be used (when available)
UseGPSProperties=UseGPS
UseGPSPropertyDescriptions=This property has been deprecated.
UseLegacyProperties=UseLegacy
UseLegacyPropertyDescriptions=If true, an app can retain their older behaviour.
UseSSLProperties=UseSSL
UseSSLPropertyDescriptions=Set to true to use SSL to talk to CloudDB/Redis server. This should be set to True for the "DEFAULT" server.
UseServiceAuthenticationProperties=UseServiceAuthentication
UseServiceAuthenticationPropertyDescriptions=Indicates whether a service account should be used for authentication
UserChoiceProperties=UserChoice
UserChoicePropertyDescriptions=The ballot choice to send to the server, which must be set before <code>SendBallot</code> is called. This must be one of <code>BallotOptions</code>.
UserEmailAddressProperties=UserEmailAddress
UserIdProperties=UserId
UserIdPropertyDescriptions=A text identifying the voter that is sent to the Voting server along with the vote. This must be set before <code>SendBallot</code> is called.
UserLatitudeProperties=UserLatitude
UserLatitudePropertyDescriptions=Returns the user''s latitude if ShowUser is enabled.
UserLongitudeProperties=UserLongitude
UserLongitudePropertyDescriptions=Returns the user''s longitude if ShowUser is enabled.
UsernameProperties=Username
UsernamePropertyDescriptions=The user name of the authorized user. Empty if there is no authorized user.
UsesLocationProperties=UsesLocation
UsesLocationPropertyDescriptions=Whether or not to give the application permission to use the Javascript geolocation API. This property is available only in the designer.
VersionCodeProperties=VersionCode
VersionCodePropertyDescriptions=An integer value which must be incremented each time a new Android Application Package File (APK) is created for the Google Play Store.
VersionNameProperties=VersionName
VersionNamePropertyDescriptions=A string which can be changed to allow Google Play Store users to distinguish between different versions of the App.
VerticalArrangement__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the VerticalArrangement are aligned horizontally. The choices are\: 1 \= left aligned, 2 \= right aligned, 3 \= horizontally centered. Alignment has no effect if the arrangement''s width is automatic.
VerticalArrangement__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the VerticalArrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.
VerticalArrangement__BackgroundColorPropertyDescriptions=Returns the background color of the VerticalArrangement
VerticalArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the VerticalArrangement as a percentage of the height of the Screen.
VerticalArrangement__HeightPropertyDescriptions=Specifies the vertical height of the VerticalArrangement, measured in pixels.
VerticalArrangement__ImagePropertyDescriptions=Returns the path of the background image of the `VerticalArrangement`.
VerticalArrangement__VisiblePropertyDescriptions=Specifies whether the VerticalArrangement should be visible on the screen. Value is true if the VerticalArrangement is showing and false if hidden.
VerticalArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the VerticalArrangement as a percentage of the width of the Screen.
VerticalArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the VerticalArrangement, measured in pixels.
VerticalScrollArrangement__AlignHorizontalPropertyDescriptions=A number that encodes how contents of the VerticalScrollArrangement are aligned horizontally. The choices are\: 1 \= left aligned, 2 \= right aligned, 3 \= horizontally centered. Alignment has no effect if the arrangement''s width is automatic.
VerticalScrollArrangement__AlignVerticalPropertyDescriptions=A number that encodes how the contents of the VerticalScrollArrangement are aligned vertically. The choices are\: 1 \= aligned at the top, 2 \= vertically centered, 3 \= aligned at the bottom. Alignment has no effect if the arrangement''s height is automatic.
VerticalScrollArrangement__BackgroundColorPropertyDescriptions=Returns the background color of the VerticalScrollArrangement
VerticalScrollArrangement__HeightPercentPropertyDescriptions=Specifies the vertical height of the VerticalScrollArrangement as a percentage of the height of the Screen.
VerticalScrollArrangement__HeightPropertyDescriptions=Specifies the vertical height of the VerticalScrollArrangement, measured in pixels.
VerticalScrollArrangement__ImagePropertyDescriptions=Returns the path of the background image of the `VerticalScrollArrangement`.
VerticalScrollArrangement__VisiblePropertyDescriptions=Specifies whether the VerticalScrollArrangement should be visible on the screen. Value is true if the VerticalScrollArrangement is showing and false if hidden.
VerticalScrollArrangement__WidthPercentPropertyDescriptions=Specifies the horizontal width of the VerticalScrollArrangement as a percentage of the width of the Screen.
VerticalScrollArrangement__WidthPropertyDescriptions=Specifies the horizontal width of the VerticalScrollArrangement, measured in pixels.
VideoPlayer__HeightPercentPropertyDescriptions=Specifies the vertical height of the VideoPlayer as a percentage of the height of the Screen.
VideoPlayer__HeightPropertyDescriptions=Specifies the component''s vertical height, measured in pixels.
VideoPlayer__SourcePropertyDescriptions=The "path" to the video. Usually, this will be the name of the video file, which should be added in the Designer.
VideoPlayer__VisiblePropertyDescriptions=Specifies whether the VideoPlayer should be visible on the screen. Value is true if the VideoPlayer is showing and false if hidden.
VideoPlayer__VolumePropertyDescriptions=Sets the volume to a number between 0 and 100. Values less than 0 will be treated as 0, and values greater than 100 will be treated as 100.
VideoPlayer__WidthPercentPropertyDescriptions=Specifies the horizontal width of the VideoPlayer as a percentage of the width of the Screen.
VideoPlayer__WidthPropertyDescriptions=Specifies the component''s horizontal width, measured in pixels.
VisibleProperties=Visible
VolumeProperties=Volume
Voting__ServiceURLPropertyDescriptions=The URL of the Voting service
Voting__UserEmailAddressPropertyDescriptions=The email address associated with this device. This property has been deprecated and always returns the empty text value.
WalkStepsProperties=WalkSteps
WalkStepsPropertyDescriptions=the number of walk steps taken since the pedometer has started.
WebRTCProperties=WebRTC
WebRTCPropertyDescriptions=Set whether or not we will use WebRTC to communicate with the server
WebViewStringProperties=WebViewString
WebViewStringPropertyDescriptions=Gets the WebView''s String, which is viewable through Javascript in the WebView as the window.AppInventor object
WebViewer__HeightPercentPropertyDescriptions=Specifies the vertical height of the WebViewer as a percentage of the height of the Screen.
WebViewer__HeightPropertyDescriptions=Specifies the `WebViewer`''s vertical height, measured in pixels.
WebViewer__VisiblePropertyDescriptions=Specifies whether the WebViewer should be visible on the screen. Value is true if the WebViewer is showing and false if hidden.
WebViewer__WidthPercentPropertyDescriptions=Specifies the horizontal width of the WebViewer as a percentage of the width of the Screen.
WebViewer__WidthPropertyDescriptions=Specifies the horizontal width of the `WebViewer`, measured in pixels.
WebXColumnProperties=WebXColumn
WebXColumnPropertyDescriptions=Sets the column to parse from the attached Web component for the x values. If a column is not specified, default values for the x values will be generated instead.
WebYColumnProperties=WebYColumn
WebYColumnPropertyDescriptions=Sets the column to parse from the attached Web component for the y values. If a column is not specified, default values for the y values will be generated instead.
WestLongitudeProperties=WestLongitude
WestLongitudePropertyDescriptions=The west edge of the rectangle, in decimal degrees east of the equator.
WheelDiameterProperties=WheelDiameter
WidthPercentProperties=WidthPercent
WidthProperties=Width
WithinRangeEventEnabledProperties=WithinRangeEventEnabled
WritePermissionProperties=WritePermission
WritePermissionPropertyDescriptions=A designer-only property that can be used to enable write access to file storage outside of the app-specific directories.
WriteTypeProperties=WriteType
WriteTypePropertyDescriptions=Returns the write type for the NFC component. For this version of the component, it is always `1`.
XAccelProperties=XAccel
XAccelPropertyDescriptions=Returns the acceleration in the X-dimension in SI units (m/s²). The sensor must be enabled to return meaningful values.
XAngularVelocityProperties=XAngularVelocity
XAngularVelocityPropertyDescriptions=The angular velocity around the X axis, in degrees per second.
XFromZeroProperties=XFromZero
XFromZeroPropertyDescriptions=Determines whether the X axis origin is set at 0 or the minimum X value across all data series.
XInterceptsProperties=XIntercept(s)
XInterceptsPropertyDescriptions=The X-intercepts of the trendline (where the line crosses the X-axis), if any. Possible values are NaN (no intercept), a single value (one intercept), or a list of values.
XProperties=X
XStrengthProperties=XStrength
XStrengthPropertyDescriptions=Indicates the field''s strength in the X-axis.
XstrengthProperties=XStrength
YAccelProperties=YAccel
YAccelPropertyDescriptions=Returns the acceleration in the Y-dimension in SI units (m/s²). The sensor must be enabled to return meaningful values.
YAngularVelocityProperties=YAngularVelocity
YAngularVelocityPropertyDescriptions=The angular velocity around the Y axis, in degrees per second.
YFromZeroProperties=YFromZero
YFromZeroPropertyDescriptions=Determines whether the Y axis origin is set at 0 or the minimum y value across all data series.
YInterceptProperties=YIntercept
YInterceptPropertyDescriptions=The Y-intercept of the trendline (constant term).
YProperties=Y
YStrengthProperties=YStrength
YStrengthPropertyDescriptions=Indicates the field''s strength in the Y-axis.
YandexTranslate__ApiKeyPropertyDescriptions=Set the API Key to use with Yandex. You do not need to set this if you are using the MIT system because MIT has its own key builtin. If set, the key provided here will be used instead
YearProperties=Year
YearPropertyDescriptions=the Year that was last picked using the DatePicker
YstrengthProperties=YStrength
ZAccelProperties=ZAccel
ZAccelPropertyDescriptions=Returns the acceleration in the Z-dimension in SI units (m/s²). The sensor must be enabled to return meaningful values.
ZAngularVelocityProperties=ZAngularVelocity
ZAngularVelocityPropertyDescriptions=The angular velocity around the Z axis, in degrees per second.
ZProperties=Z
ZStrengthProperties=ZStrength
ZStrengthPropertyDescriptions=Indicates the field''s strength in the Z-axis.
ZoomLevelProperties=ZoomLevel
ZoomLevelPropertyDescriptions=Specifies the zoom level of the map. Valid values of ZoomLevel are dependent on the tile provider and the latitude and longitude of the map. For example, zoom levels are more constrained over oceans than dense city centers to conserve space for storing tiles, so valid values may be 1-7 over ocean and 1-20 over cities. Tile providers may send warning or error tiles if the zoom level is too great for the server to support.
ZstrengthProperties=ZStrength
bestFitModelExponentialOption=Exponential
bestFitModelLinearOption=Linear
bestFitModelLogarithmicOption=Logarithmic
bestFitModelOptionList=BestFitModel
bestFitModelQuadraticOption=Quadratic
chartTypeAreaOption=Area
chartTypeBarOption=Bar
chartTypeLineOption=Line
chartTypeOptionList=ChartType
chartTypePieOption=Pie
chartTypeScatterOption=Scatter
colorSensorModeAmbientOption=Ambient
colorSensorModeColorOption=Color
colorSensorModeOptionList=ColorSensorMode
colorSensorModeReflectedOption=Reflected
directionEastOption=East
directionNorthOption=North
directionNortheastOption=Northeast
directionNorthwestOption=Northwest
directionOptionList=Direction
directionSouthOption=South
directionSoutheastOption=Southeast
directionSouthwestOption=Southwest
directionWestOption=West
endedStatusIncomingEndedOption=IncomingEnded
endedStatusIncomingRejectedOption=IncomingRejected
endedStatusOptionList=EndedStatus
endedStatusOutgoingEndedOption=OutgoingEnded
fileActionOptionList=FileAction
fileActionPickDirectoryOption=PickDirectory
fileActionPickExistingFileOption=PickExistingFile
fileActionPickNewFileOption=PickNewFile
fileScopeAppOption=App
fileScopeAssetOption=Asset
fileScopeCacheOption=Cache
fileScopeLegacyOption=Legacy
fileScopeOptionList=FileScope
fileScopePrivateOption=Private
fileScopeSharedOption=Shared
fileTypeAnyOption=Any
fileTypeAudioOption=Audio
fileTypeImageOption=Image
fileTypeOptionList=FileType
fileTypeVideoOption=Video
gyroSensorModeAngleOption=Angle
gyroSensorModeOptionList=GyroSensorMode
gyroSensorModeRateOption=Rate
horizontalAlignmentCenterOption=Center
horizontalAlignmentLeftOption=Left
horizontalAlignmentOptionList=HorizontalAlignment
horizontalAlignmentRightOption=Right
lOBFValuesAllValuesOption=AllValues
lOBFValuesCorrCoefOption=CorrCoef
lOBFValuesExponentialBaseOption=ExponentialBase
lOBFValuesExponentialCoefficientOption=ExponentialCoefficient
lOBFValuesLinearCoefficientOption=LinearCoefficient
lOBFValuesLogarithmCoefficientOption=LogarithmCoefficient
lOBFValuesLogarithmConstantOption=LogarithmConstant
lOBFValuesOptionList=LOBFValues
lOBFValuesPredictionsOption=Predictions
lOBFValuesQuadraticCoefficientOption=QuadraticCoefficient
lOBFValuesRSquaredOption=RSquared
lOBFValuesSlopeOption=Slope
lOBFValuesXInterceptsOption=XIntercepts
lOBFValuesYinterceptOption=Yintercept
lineTypeCurvedOption=Curved
lineTypeLinearOption=Linear
lineTypeOptionList=LineType
lineTypeSteppedOption=Stepped
mapTypeAerialOption=Aerial
mapTypeOptionList=MapType
mapTypeRoadOption=Road
mapTypeTerrainOption=Terrain
nxtMailboxBox10Option=Box10
nxtMailboxBox1Option=Box1
nxtMailboxBox2Option=Box2
nxtMailboxBox3Option=Box3
nxtMailboxBox4Option=Box4
nxtMailboxBox5Option=Box5
nxtMailboxBox6Option=Box6
nxtMailboxBox7Option=Box7
nxtMailboxBox8Option=Box8
nxtMailboxBox9Option=Box9
nxtMailboxOptionList=NxtMailbox
nxtMotorModeBrakeOption=Brake
nxtMotorModeCoastOption=Coast
nxtMotorModeOnOption=On
nxtMotorModeOptionList=NxtMotorMode
nxtMotorModeRegulatedOption=Regulated
nxtMotorPortOptionList=NxtMotorPort
nxtMotorPortPortAOption=PortA
nxtMotorPortPortBOption=PortB
nxtMotorPortPortCOption=PortC
nxtRegulationModeDisabledOption=Disabled
nxtRegulationModeOptionList=NxtRegulationMode
nxtRegulationModeSpeedOption=Speed
nxtRegulationModeSynchronizationOption=Synchronization
nxtRunStateDisabledOption=Disabled
nxtRunStateOptionList=NxtRunState
nxtRunStateRampDownOption=RampDown
nxtRunStateRampUpOption=RampUp
nxtRunStateRunningOption=Running
nxtSensorModeBooleanOption=Boolean
nxtSensorModeOptionList=NxtSensorMode
nxtSensorModePercentageOption=Percentage
nxtSensorModePeriodCountOption=PeriodCount
nxtSensorModeRawOption=Raw
nxtSensorModeRcxAngleStepsOption=RcxAngleSteps
nxtSensorModeRcxCelsiusOption=RcxCelsius
nxtSensorModeRcxFahrenheitOption=RcxFahrenheit
nxtSensorModeTransitionCountOption=TransitionCount
nxtSensorPortOptionList=NxtSensorPort
nxtSensorPortPort1Option=Port1
nxtSensorPortPort2Option=Port2
nxtSensorPortPort3Option=Port3
nxtSensorPortPort4Option=Port4
nxtSensorTypeColorBlueOption=ColorBlue
nxtSensorTypeColorFullOption=ColorFull
nxtSensorTypeColorGreenOption=ColorGreen
nxtSensorTypeColorNoneOption=ColorNone
nxtSensorTypeColorRedOption=ColorRed
nxtSensorTypeDigital12C9VOption=Digital12C9V
nxtSensorTypeDigital12COption=Digital12C
nxtSensorTypeLightOffOption=LightOff
nxtSensorTypeLightOnOption=LightOn
nxtSensorTypeNoSensorOption=NoSensor
nxtSensorTypeOptionList=NxtSensorType
nxtSensorTypeRcxAngleOption=RcxAngle
nxtSensorTypeRcxLightOption=RcxLight
nxtSensorTypeRcxTemperatureOption=RcxTemperature
nxtSensorTypeSoundDBAOption=SoundDBA
nxtSensorTypeSoundDBOption=SoundDB
nxtSensorTypeTouchOption=Touch
permissionAccountManagerOption=AccountManager
permissionAudioOption=Audio
permissionBluetoothAdminOption=BluetoothAdmin
permissionBluetoothAdvertiseOption=BluetoothAdvertise
permissionBluetoothConnectOption=BluetoothConnect
permissionBluetoothOption=Bluetooth
permissionBluetoothScanOption=BluetoothScan
permissionCameraOption=Camera
permissionCoarseLocationOption=CoarseLocation
permissionFineLocationOption=FineLocation
permissionGetAccountsOption=GetAccounts
permissionInternetOption=Internet
permissionLocationExtraCommandsOption=LocationExtraCommands
permissionManageAccountsOption=ManageAccounts
permissionMockLocationOption=MockLocation
permissionNearFieldCommunicationOption=NearFieldCommunication
permissionNetworkStateOption=NetworkState
permissionOptionList=Permission
permissionReadContactsOption=ReadContacts
permissionReadExternalStorageOption=ReadExternalStorage
permissionReadMediaAudioOption=ReadMediaAudio
permissionReadMediaImagesOption=ReadMediaImages
permissionReadMediaVideoOption=ReadMediaVideo
permissionUseCredentialsOption=UseCredentials
permissionVibrateOption=Vibrate
permissionWifiStateOption=WifiState
permissionWriteExternalStorageOption=WriteExternalStorage
pointStyleCircleOption=Circle
pointStyleCrossOption=Cross
pointStyleOptionList=PointStyle
pointStyleSquareOption=Square
pointStyleTriangleOption=Triangle
pointStyleXOption=X
receivingStateAlwaysOption=Always
receivingStateForegroundOption=Foreground
receivingStateOffOption=Off
receivingStateOptionList=ReceivingState
scaleUnitsImperialOption=Imperial
scaleUnitsMetricOption=Metric
scaleUnitsOptionList=ScaleUnits
screenAnimationDefaultOption=Default
screenAnimationFadeOption=Fade
screenAnimationNoneOption=None
screenAnimationOptionList=ScreenAnimation
screenAnimationSlideHorizontalOption=SlideHorizontal
screenAnimationSlideVerticalOption=SlideVertical
screenAnimationZoomOption=Zoom
screenOrientationBehindOption=Behind
screenOrientationFullSensorOption=FullSensor
screenOrientationLandscapeOption=Landscape
screenOrientationNoSensorOption=NoSensor
screenOrientationOptionList=ScreenOrientation
screenOrientationPortraitOption=Portrait
screenOrientationReverseLandscapeOption=ReverseLandscape
screenOrientationReversePortraitOption=ReversePortrait
screenOrientationSensorLandscapeOption=SensorLandscape
screenOrientationSensorOption=Sensor
screenOrientationSensorPortraitOption=SensorPortrait
screenOrientationUnspecifiedOption=Unspecified
screenOrientationUserOption=User
sensitivityModerateOption=Moderate
sensitivityOptionList=Sensitivity
sensitivityStrongOption=Strong
sensitivityWeakOption=Weak
startedStatusIncomingOption=Incoming
startedStatusOptionList=StartedStatus
startedStatusOutgoingOption=Outgoing
strokeStyleDashedOption=Dashed
strokeStyleDottedOption=Dotted
strokeStyleOptionList=StrokeStyle
strokeStyleSolidOption=Solid
transportMethodBicycleOption=Bicycle
transportMethodCarOption=Car
transportMethodFootOption=Foot
transportMethodOptionList=TransportMethod
transportMethodWheelchairOption=Wheelchair
ultrasonicSensorUnitCentimetersOption=Centimeters
ultrasonicSensorUnitInchesOption=Inches
ultrasonicSensorUnitOptionList=UltrasonicSensorUnit
verticalAlignmentBottomOption=Bottom
verticalAlignmentCenterOption=Center
verticalAlignmentOptionList=VerticalAlignment
verticalAlignmentTopOption=Top
